{"version":3,"sources":["components/Constants.js","components/snapToGrid.js","components/ItemTypes.js","components/Singleton.js","components/DistributionMenu.js","components/GridBox.js","components/HighlightComponent.js","components/Distribution.js","components/DustBin.js","components/Box.js","components/DraggableBox.js","components/TableDist.js","components/Container.js","components/Uniqid.js","components/CustomDragLayer.js","components/FrontSide.js","components/RearSide.js","components/Controller.js","components/DrawingApp.js","App.js","reportWebVitals.js","index.js"],"names":["Constants","useLocalStorage","gridSize","ElementType","INPUTS","OUTPUTS","THROUGH_OUTPUTS","ADDONS","SVG_ELEMENTS","FULL_WIDTH","SCALE","FRONT_SIDE","REAR_SIDE","snapToGrid","x","y","Math","round","ItemTypes","Singleton","item","shortClassName","name","className","id","uniqid","alert","totalDroppedItems","controller","containerRef","state","items","i","push","setTotalDroppedItems","distribution","distribution_name","DistributionMenu","props","event","removeItem","this","image","width","height","src","alt","title","data","onClick","handleClick","React","Component","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","float","zIndex","GridBox","type","top","left","description","container","e_name","isDropped","getGridBoxId","useDrag","collect","monitor","getItem","opacity","isDragging","initialOffset","getInitialClientOffset","currentOffset","getSourceClientOffset","clientOffset","getClientOffset","canDrag","drag","useState","setX","setY","useLayoutEffect","sub","fromEvent","document","pipe","map","clientX","clientY","subscribe","newX","newY","window","scrollX","scrollY","unsubscribe","doSnapToGrid","offset","$","getTotalDroppedItems","saveItem","useMousePosition","ref","HighlightComponent","getElementById","dragElementId","position","display","backgroundImage","backgroundSize","toString","textAlign","fontSize","lineHeight","Distribution","accept","lastDroppedItem","onDrop","useDrop","drop","isOver","canDrop","diffOffset","getInitialSourceClientOffset","undefined","hover","highlightComponent","$elem","useEffect","distributionSize","setDistributionSize","size","localStorage","heights","Map","Object","fromEntries","css","outerWidth","__singletonRef","index","marginLeft","color","DustBin","Box","Fragment","getStyles","transform","WebkitTransform","DraggableBox","preview","getEmptyImage","captureDraggingState","TableDist","plugsAndSockets","allTypes","Container","distributions","boxes","droppedBoxNames","dustbins","cartesianDroppedItems","templatedDroppedItems","JSON","parse","handleDustBinDrop","bind","handleDrop","element_type","accepts","setDistributions","setDroppedBoxNames","saveTotalDroppedItems","num","droppedItems","newDroppedItems","length","update","$set","setState","setItem","stringify","now","Date","MD5","getTime","Uniqid","$push","attr","val","instance","renderBox","boxName","indexOf","element_outputs","element_through_outputs","element_addons","element_inputs","sliding-panel","overflow","clear","marginTop","element","FrontSide","viewBox","change","value","paper","Snap","g","objects","type_mapping","importAllObjects","importCartesianObjectsByCache","draw","changeSlider","obtainViewBox","object_types","then","catch","err","console","error","mousePosition","mousedown","event1","mousemove","event2","difference","v","join","mouseup","unbind","mouseout","showGrid","showWheel","parseInt","replace","add","cache","Promise","resolve","reject","importCartesianObjectsFromDatabase","function_to_execute","vb","split","target","min","max","step","onChange","RearSide","Controller","colors","svg_monitoring","svg_power","snapToGridAfterDrop","snapToGridWhileDragging","changeToMonitoring","changeToPower","changeToDefault","cartesianWidth","cartesianHeight","templateWidth","templateHeight","changeGridSizes","showPanel","sliding","toggleSliging","changeUnitSize","body","documentElement","cartesian_value","toggleClass","preventDefault","select","elem","designer","buttons","defaultValue","DrawingApp","DndProvider","backend","HTML5Backend","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d768b4ac.chunk.js","sourcesContent":["const ElementType = {\r\n    INPUTS: 'Inputs',\r\n    OUTPUTS: 'Outputs',\r\n    THROUGH_OUTPUTS: 'Through Output',\r\n    ADDONS: 'Add-ons',\r\n};\r\n\r\nconst COLORS = {\r\n    'BRAND_TITLE': 'b00110',\r\n    \r\n}\r\n\r\nconst SCALE = {\r\n    FRONT_SIDE: 5,\r\n    REAR_SIDE: 5\r\n};\r\n\r\nconst SVG_ELEMENTS = {\r\n    FULL_WIDTH: '280px'\r\n};\r\n\r\nconst Constants = {\r\n    useLocalStorage: true,\r\n    gridSize: 16,\r\n    ElementType: ElementType,\r\n    SVG_ELEMENTS: SVG_ELEMENTS,\r\n    SCALE: SCALE\r\n};\r\n\r\nexport default Constants;\r\n","import Constants from './Constants';\r\n\r\nexport function snapToGrid(x, y) {\r\n    const snappedX = Math.round(x / Constants.gridSize) * Constants.gridSize;\r\n    const snappedY = Math.round(y / Constants.gridSize) * Constants.gridSize;\r\n    return [snappedX, snappedY];\r\n}\r\n  ","export const ItemTypes = {\r\n    PLUGS: 'Plugs',\r\n    SOCKETS: 'Sockets',\r\n    PILOT_LIGHTS: 'Pilot Lights',\r\n    MULTIMETER: 'Multimeter',\r\n    LIVE_PINS_INPUT: 'Live Pins Input',\r\n    LIVE_PINS_OUTPUT: 'Loop Through',\r\n    PINS_INPUT_1: 'Pins Input@1',\r\n    PINS_INPUT_2: 'Pins Input@2',\r\n    PLUGS_1: 'Plugs@1',\r\n    PLUGS_2: 'Plugs@2',\r\n    PLUGS_3: 'Plugs@3',\r\n    PLUGS_4: 'Plugs@4',\r\n    PLUGS_5: 'Plugs@5',\r\n    SOCKETS_1: 'Sockets@1',\r\n    SOCKETS_2: 'Sockets@2',\r\n    SOCKETS_3: 'Sockets@3',\r\n}\r\n","class Singleton {\r\n\r\n    static controller = null\r\n\r\n    static getGridBoxId(item) {\r\n        let shortClassName = \"grid-box-item-\" + item.name;\r\n        let className = \"grid-box \" + shortClassName;\r\n        return {shortClassName: shortClassName, className: className, id: shortClassName + \"-\" + item.uniqid};\r\n    }\r\n\r\n    static removeItem(item) {\r\n        alert(item);\r\n        let distributions = Singleton.controller.containerRef.state['distributions'];\r\n        let totalDroppedItems = distributions.totalDroppedItems;\r\n        let items = []\r\n        for(var i in totalDroppedItems) {\r\n            if(!totalDroppedItems[i].uniqid == item.uniqid) {\r\n                items.push(totalDroppedItems[i]);\r\n            }\r\n        }\r\n        Singleton.controller.containerRef.setTotalDroppedItems(\r\n            items, item.distribution, item.distribution_name\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Singleton;","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport Singleton from './Singleton'\r\n\r\nclass DistributionMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    handleClick(event) {\r\n        alert(event);\r\n        Singleton.removeItem(this.item)\r\n    }\r\n    \r\n    render() {\r\n        let { image, name, width, height, uniqid } = this.props;\r\n        this.item = {image, name, width, height};\r\n        return (\r\n            <div className=\"distribution-box-menu\">\r\n                <ContextMenuTrigger id=\"distribution-box-contextmenu\">\r\n                    <div className=\"well\"></div>\r\n                    <img src={image} alt={name} title={name} width={width} height={height} />\r\n                </ContextMenuTrigger>\r\n            \r\n                <ContextMenu id=\"distribution-box-contextmenu\">\r\n                    <MenuItem data={{}} onClick={this.handleClick}>Remove</MenuItem>\r\n                </ContextMenu>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DistributionMenu;","import React, { useState, useCallback, useLayoutEffect } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport update from 'immutability-helper';\r\nimport { useEffect } from 'react'\r\nimport { fromEvent } from 'rxjs'\r\nimport { map, throttleTime } from 'rxjs/operators'\r\nimport { ItemTypes } from './ItemTypes';\r\nimport { snapToGrid as doSnapToGrid } from './snapToGrid';\r\nimport DistributionMenu from './DistributionMenu';\r\nimport $ from 'jquery';\r\nimport Singleton from './Singleton';\r\nconst style = {\r\n    border: '1px dashed gray',\r\n    backgroundColor: 'transparent',\r\n    padding: '0.1px',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    cursor: 'move',\r\n    float: 'left',\r\n    zIndex: 1000,\r\n};\r\nexport const GridBox = ({ name, type, uniqid, distribution, image, top, left, width, height, distribution_name, description, container, e_name, isDropped }) => {\r\n    // specify an id for styling purposes\r\n    let {className, id} = Singleton.getGridBoxId({name, uniqid});\r\n\r\n    // useDrag denotes draggable\r\n    const [{ opacity, initialOffset, currentOffset, clientOffset, item, isDragging }, drag] = useDrag({\r\n        // add attributes here\r\n        item: { name, type, uniqid, distribution, image, width, height, distribution_name, description },\r\n        collect: (monitor) => ({\r\n            item: monitor.getItem(),\r\n            opacity: monitor.isDragging() ? 0.4 : 1,\r\n            initialOffset: monitor.getInitialClientOffset(),\r\n            currentOffset: monitor.getSourceClientOffset(),\r\n            clientOffset: monitor.getClientOffset(),\r\n            canDrag: monitor.canDrag(),\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    let position = useMousePosition();\r\n\r\n    // // mouse tracking\r\n    function useMousePosition() {\r\n        const [x, setX] = useState(null)\r\n        const [y, setY] = useState(null)\r\n\r\n        useLayoutEffect(() => {\r\n            // Subscribe to the mousemove event\r\n            const sub = fromEvent(document, 'drag')\r\n            // Extract out current mouse position from the event\r\n            .pipe(map(event => [event.clientX, event.clientY]))\r\n            // We have closure over the updater functions for our two state variables\r\n            // Use these updaters to bridge the gap between RxJS and React\r\n            .subscribe(([newX, newY]) => {\r\n                setX(newX + window.scrollX)\r\n                setY(newY + window.scrollY)\r\n            })\r\n\r\n            // When the component unmounts, remove the event listener\r\n            return () => {\r\n                sub.unsubscribe()\r\n            }\r\n            // We use [] here so that this effect fires exactly once.\r\n            // (After the first render)\r\n        }, [])\r\n\r\n        if(isDragging && x && y) {\r\n            let [left, top] = doSnapToGrid(x, y);\r\n            let offset = {left: 0, top: 0};\r\n            if(distribution_name == \"cartesian\") {\r\n                offset = $('#cartesian_distribution_container').offset();\r\n            } else if(distribution_name == \"templated\") {\r\n                offset = $('#templated_distribution_container').offset();\r\n            }\r\n            const item = getItem(uniqid);\r\n            if(item) {\r\n                item.left = (left-offset['left']-40)+'px';\r\n                item.top = (top-offset['top']-40)+'px';\r\n                saveItem(item);\r\n            }\r\n        }\r\n\r\n        return { mouseX: x, mouseY: y }\r\n    }\r\n    function getItem(uniqid) {\r\n        let items = container.getTotalDroppedItems(item.distribution);\r\n        for(var i in items) {\r\n            if(uniqid == items[i].uniqid) {\r\n                return items[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function saveItem(item) {\r\n        let items = container.getTotalDroppedItems(item.distribution);\r\n        for(var i in items) {\r\n            if(items[i].uniqid == item.uniqid) {\r\n                items[i] = item;\r\n                break;\r\n            }\r\n        }\r\n        container.setTotalDroppedItems(items, item.distribution, item.distribution_name);\r\n    }\r\n\r\n    return (<div ref={drag} style={{...style, opacity, top, left}} className={className} id={id}>\r\n            <DistributionMenu image={image} name={name} width={width} height=\"auto\" name={name} type={type} uniqid={uniqid} />\r\n\t\t</div>);\r\n};\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { fromEvent } from 'rxjs'\r\nimport { map, throttleTime } from 'rxjs/operators'\r\nimport { snapToGrid as doSnapToGrid } from './snapToGrid';\r\nimport $ from 'jquery';\r\n\r\nexport const HighlightComponent = ({ item, currentOffset, clientOffset }) => {\r\n    let width = $(document.getElementById(item.dragElementId)).width();\r\n    let height = $(document.getElementById(item.dragElementId)).height();\r\n\r\n    let id = \"highlight-component-\" + item.name;\r\n\r\n    return (\r\n        <div className=\"highlight-component\" id={id} style={{\r\n            position: 'absolute',\r\n            opacity: 0.4,\r\n            display: 'block',\r\n            zIndex: 1,\r\n            backgroundColor: 'pink',\r\n            backgroundImage: 'url(\"images/power_box/canvas_grid-8u.png\")',\r\n            backgroundSize: '25%',\r\n            width: (width).toString() + 'px',\r\n            height: (height).toString() + 'px',\r\n        }}></div>\r\n    )\r\n}","import React, { useState, useCallback, useEffect, useLayoutEffect } from 'react';\r\nimport { fromEvent } from 'rxjs'\r\nimport { map, throttleTime } from 'rxjs/operators'\r\nimport { snapToGrid as doSnapToGrid } from './snapToGrid';\r\nimport { useDrop, useDrag } from 'react-dnd';\r\nimport { GridBox } from './GridBox';\r\nimport Constants from './Constants';\r\nimport { HighlightComponent } from './HighlightComponent';\r\nimport $ from 'jquery';\r\nimport Singleton from './Singleton';\r\nconst useLocalStorage = Constants.useLocalStorage;\r\n\r\nlet style = {\r\n    marginBottom: '0.5rem',\r\n    padding: '5%',\r\n    textAlign: 'center',\r\n    fontSize: '1rem',\r\n    lineHeight: 'normal'\r\n};\r\n\r\nexport const Distribution = ({ accept, lastDroppedItem, totalDroppedItems, e_name, container, onDrop, }) => {\r\n    let currentItem = null;\r\n\r\n    // useDrop denotes droppable\r\n    const [{ isOver, canDrop, initialOffset, currentOffset, clientOffset, diffOffset, item }, drop] = useDrop({\r\n        accept,\r\n        drop: onDrop,\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n            initialOffset: monitor.getInitialClientOffset(),\r\n            currentOffset: monitor.getSourceClientOffset(),\r\n            clientOffset: monitor.getClientOffset(),\r\n            diffOffset: monitor.getInitialSourceClientOffset(),\r\n            item: monitor.getItem()\r\n        }),\r\n        canDrop: (item, monitor) => {\r\n            return (item.distribution != null) || (item.distribution != undefined) ? false : true;\r\n        },\r\n        hover: (item, monitor) => {\r\n            currentItem = item;\r\n            // specify an id for styling purposes\r\n            let id = \"element-box-item-\" + item.name;\r\n            item.dragElementId = id;\r\n            item.highlightComponent = \"highlight-component-\" + item.name;\r\n            return false;\r\n        }\r\n    });\r\n    const isActive = isOver && canDrop;\r\n    let backgroundColor = 'transparent';\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n    else if (canDrop) {\r\n        backgroundColor = 'darkkhaki';\r\n    }\r\n    let $elem = <div></div>;\r\n    if(item && clientOffset && currentOffset && document.getElementById(item.dragElementId)) {\r\n        $elem = <HighlightComponent item={item} currentOffset={currentOffset}\r\n        clientOffset={clientOffset} />\r\n    }\r\n\r\n    let position = useMousePosition();\r\n\r\n    // // mouse tracking\r\n    function useMousePosition() {\r\n        const [x, setX] = useState(null)\r\n        const [y, setY] = useState(null)\r\n\r\n        useEffect(() => {\r\n            // Subscribe to the mousemove event\r\n            const sub = fromEvent(document, 'drag')\r\n            // Extract out current mouse position from the event\r\n            .pipe(map(event => [event.clientX, event.clientY]))\r\n            // We have closure over the updater functions for our two state variables\r\n            // Use these updaters to bridge the gap between RxJS and React\r\n            .subscribe(([newX, newY]) => {\r\n                setX(newX + window.scrollX)\r\n                setY(newY + window.scrollY)\r\n            })\r\n\r\n            // When the component unmounts, remove the event listener\r\n            return () => {\r\n                sub.unsubscribe()\r\n            }\r\n            // We use [] here so that this effect fires exactly once.\r\n            // (After the first render)\r\n        }, [])\r\n\r\n        if(canDrop && item && document.getElementById(item.highlightComponent)) {\r\n            // left and top are saved on refresh\r\n            let [left, top] = doSnapToGrid(x, y);\r\n            if(item.distribution_name == \"cartesian\") {\r\n                let offset = $('#cartesian_distribution_container').offset();\r\n                document.getElementById(item.highlightComponent).style.width = item.width;\r\n                document.getElementById(item.highlightComponent).style.height = item.height;\r\n                document.getElementById(item.highlightComponent).style.left = (left-offset['left']).toString() + \"px\";\r\n                document.getElementById(item.highlightComponent).style.top = (top-offset['top']).toString() + \"px\";\r\n                document.getElementById(item.dragElementId).style.left = (left-offset['left']-80).toString() + \"px\";\r\n                document.getElementById(item.dragElementId).style.top = (top-offset['top']-80).toString() + \"px\";\r\n                item.left = (left-offset['left']-80).toString() + \"px\";\r\n                item.top = (top-offset['top']-80).toString() + \"px\";\r\n            } else if(item.distribution_name == \"templated\") {\r\n                let offset = $('#templated_distribution_container').offset();\r\n                let width = $('#boxes_container_draggable_holder').width();\r\n                document.getElementById(item.highlightComponent).style.width = item.width;\r\n                document.getElementById(item.highlightComponent).style.height = item.height;\r\n                document.getElementById(item.highlightComponent).style.left = (left-width-120).toString() + \"px\";\r\n                document.getElementById(item.highlightComponent).style.top = (top-offset['top']).toString() + \"px\";\r\n                document.getElementById(item.dragElementId).style.left = (left-offset['left']-80).toString() + \"px\";\r\n                document.getElementById(item.dragElementId).style.top = (top-offset['top']-80).toString() + \"px\";\r\n                item.left = (left-offset['left']-80).toString() + \"px\";\r\n                item.top = (top-offset['top']-80).toString() + \"px\";\r\n            }\r\n        }\r\n\r\n        return { mouseX: x, mouseY: y }\r\n    }\r\n\r\n    const [distributionSize, setDistributionSize] = useState(0);\r\n    useLayoutEffect(() => {\r\n        const size = localStorage.getItem(\"cartesian: size\");\r\n        if (size) {\r\n            setDistributionSize(size);\r\n            // predetermined heights\r\n            let heights = new Map([\r\n                ['24U', 1137],\r\n                ['20U', 937],\r\n                ['16U', 743],\r\n                ['12U', 550],\r\n                ['8U', 350],\r\n            ]);\r\n\r\n            if(distributionSize != '24U') {\r\n                style['padding'] = '5.4%';\r\n            }\r\n        \r\n            heights = Object.fromEntries(heights);\r\n            $(document.getElementById(e_name)).css('height', ($(document).width() * 0.40 / 681 * 1455).toString() + \"px\");\r\n            document.getElementById(e_name + \"_distribution_container\").style.height = \r\n            (heights[distributionSize] * $(document.getElementById(e_name)).outerWidth() / 681).toString() + \"px\"; // outerWidth\r\n        }\r\n    }, [distributionSize]);\r\n\r\n    if(!totalDroppedItems) {\r\n        totalDroppedItems = [];\r\n    }\r\n    // if(totalDroppedItems) {\r\n    //     localStorage.setItem(e_name + \": items\", JSON.stringify(totalDroppedItems));\r\n    // }\r\n\r\n    return (<div style={{ ...style }} className={e_name} id={e_name}>\r\n\r\n            {$elem}\r\n\r\n            <div ref={drop} style={{ backgroundColor, backgroundSize: Singleton.__singletonRef.controller.state['value']-50+100 + '%' }} className=\"distribution_container\" id={e_name + \"_distribution_container\"}>\r\n                {\r\n                    totalDroppedItems.map((item, index) =>  {\r\n                        return (\r\n                            <GridBox container={container} name={item.name} type={item.type} uniqid={item.uniqid} key={item.index}\r\n                            distribution={item.distribution} image={item.image} e_name={e_name}\r\n                            top={item.top} left={item.left} width={item.width} height={item.height}\r\n                            distribution_name={item.distribution_name} description={item.description} \r\n                            isDropped={true} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\t\t</div>);\r\n};\r\n","import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport Constants from './Constants';\r\nconst style = {\r\n    // height: '350px',\r\n    marginRight: '10%',\r\n    marginLeft: '5%',\r\n    width: '90%',\r\n    marginBottom: '0.5rem',\r\n    color: 'white',\r\n    padding: Constants.gridSize.toString() + 'px',\r\n    textAlign: 'center',\r\n    fontSize: '5rem',\r\n    lineHeight: 'normal',\r\n};\r\nexport const DustBin = ({ accept, onDrop, }) => {\r\n    // useDrop denotes droppable\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept,\r\n        drop: onDrop,\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const isActive = isOver && canDrop;\r\n    let backgroundColor = '#222';\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n    else if (canDrop) {\r\n        backgroundColor = 'darkkhaki';\r\n    }\r\n    return (<div ref={drop} style={{ ...style, backgroundColor }} className=\"dustbin-container\">\r\n\t\tDUSTBIN</div>);\r\n};\r\n","import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nconst style = {\r\n    border: '0px none',\r\n    backgroundColor: 'white',\r\n    padding: '0px',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    cursor: 'move',\r\n    zIndex: 100,\r\n};\r\nexport const Box = ({ name, type, uniqid, distribution, image, width, height, distribution_name, description, isDropped }) => {\r\n    // useDrag denotes draggable\r\n    const [{ opacity }, drag] = useDrag({\r\n        // add item attributes here\r\n        item: { name, type, uniqid, distribution, image, width, height, distribution_name, description },\r\n        collect: (monitor) => {\r\n            return {\r\n                opacity: monitor.isDragging() ? 0.4 : 1\r\n            }\r\n        }\r\n    });\r\n    let className = \"box-item box-item-\" + name;\r\n    return (<div ref={drag} style={{ ...style, opacity }} className={className} id={\"element-box-item-\" + name}>\r\n            <img src={image} alt={name} title={name} width={width} height=\"auto\" /><br/>\r\n            <abbr style={{width: '100%'}}><React.Fragment><b>{description}</b></React.Fragment></abbr>\r\n\t\t</div>);\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\nimport { Box } from './Box';\r\nfunction getStyles(left, top, isDragging) {\r\n    const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n    return {\r\n        // IE fallback: hide the real node using CSS when dragging\r\n        // because IE will ignore our custom \"empty image\" drag preview.\r\n        opacity: isDragging ? 0 : 1,\r\n        height: isDragging ? 0 : '',\r\n        transform: transform,\r\n        WebkitTransform: transform,\r\n        left: left,\r\n        top: top\r\n    };\r\n}\r\nexport const DraggableBox = (props) => {\r\n    const { name, type, uniqid, distribution, image, width, height, isDropped, left, top, distribution_name, description, id } = props;\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: { name, type, uniqid, distribution, image, width, distribution_name },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), { captureDraggingState: true });\r\n    }, []);\r\n    return (<div style={getStyles(left, top, isDragging)} className=\"draggable-box\" key={id}>\r\n            <Box name={name} type={type} uniqid={uniqid} distribution={distribution} image={image}\r\n            width={width} height={height} distribution_name={distribution_name} description={description}\r\n            isDropped={isDropped} />\r\n\t\t</div>);\r\n};\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport $ from 'jquery';\r\nimport { Distribution } from './Distribution';\r\n\r\nexport default class TableDist extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const {accept, lastDroppedItem, totalDroppedItems, e_name, onDrop, index} = this.props;\r\n        this.e_name = e_name;\r\n        return (\r\n            <Distribution container={this.props.container} accept={accept} \r\n            lastDroppedItem={lastDroppedItem} \r\n            totalDroppedItems={totalDroppedItems} \r\n            e_name={e_name}\r\n            onDrop={onDrop} key={index}/>\r\n        )\r\n    }\r\n\r\n}","import React, { useState, useCallback, useLayoutEffect } from 'react';\r\nimport { Distribution } from './Distribution';\r\nimport { DustBin } from './DustBin';\r\nimport { Box } from './Box';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport update from 'immutability-helper';\r\nimport Uniqid from './Uniqid';\r\nimport Constants from './Constants';\r\nimport { snapToGrid as doSnapToGrid } from './snapToGrid';\r\nimport { DraggableBox } from './DraggableBox';\r\nimport { useDrop } from 'react-dnd';\r\nimport TableDist from './TableDist';\r\nimport $ from 'jquery';\r\nimport Singleton from './Singleton';\r\nconst useLocalStorage = Constants.useLocalStorage;\r\n\r\nconst buckets = {\r\n    \"cartesian\": null, \r\n    \"templated\": null,\r\n};\r\n\r\nconst plugsAndSockets = [ItemTypes.PLUGS_1, ItemTypes.PLUGS_2, ItemTypes.PLUGS_3, ItemTypes.PLUGS_4, ItemTypes.PLUGS_5, \r\n    ItemTypes.SOCKETS_1, ItemTypes.SOCKETS_2, ItemTypes.SOCKETS_3, ItemTypes.LIVE_PINS_INPUT, ItemTypes.LIVE_PINS_OUTPUT, \r\n    ItemTypes.PINS_INPUT_1, ItemTypes.PINS_INPUT_2];\r\n    \r\n    const allTypes = [ItemTypes.PLUGS_1, ItemTypes.PLUGS_2, ItemTypes.PLUGS_3, ItemTypes.PLUGS_4, ItemTypes.PLUGS_5, \r\n        ItemTypes.SOCKETS_1, ItemTypes.SOCKETS_2, ItemTypes.SOCKETS_3, ItemTypes.PILOT_LIGHTS, \r\n        ItemTypes.MULTIMETER, ItemTypes.LIVE_PINS_INPUT, ItemTypes.LIVE_PINS_OUTPUT, \r\n    ItemTypes.PINS_INPUT_1, ItemTypes.PINS_INPUT_2];\r\n\r\nconst style = {\r\n    width: '100%',\r\n    // marginRight: '0.5rem',\r\n    marginBottom: '0.5rem',\r\n    color: '#ababab',\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    fontSize: '1rem',\r\n    lineHeight: 'normal',\r\n    float: 'left',\r\n};\r\n\r\nclass Container extends React.Component {\r\n\r\n    state = {\r\n        distributions: [],\r\n        boxes: [],\r\n        droppedBoxNames: [],\r\n        dustbins: [],\r\n        distributionSize: [],\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        Singleton.__singletonRef.controller.container = this;\r\n        let cartesianDroppedItems = null, templatedDroppedItems = null;\r\n        if(useLocalStorage) {\r\n            cartesianDroppedItems = localStorage.getItem(\"cartesian\" + \": items\");\r\n            templatedDroppedItems = localStorage.getItem(\"templated\" + \": items\");\r\n            if(!cartesianDroppedItems) {\r\n                cartesianDroppedItems = [];\r\n            } else {\r\n                cartesianDroppedItems = JSON.parse(cartesianDroppedItems);\r\n            }\r\n            if(!templatedDroppedItems) {\r\n                templatedDroppedItems = [];\r\n            } else {\r\n                templatedDroppedItems = JSON.parse(templatedDroppedItems);\r\n            }\r\n        }\r\n        this.handleDustBinDrop = this.handleDustBinDrop.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n        const boxes = [\r\n            { name: 'Plugs@1', type: ItemTypes.PLUGS_1, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-1.png', element_type: Constants.ElementType.OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '63A 400V CEE 5P' },\r\n            { name: 'Plugs@2', type: ItemTypes.PLUGS_2, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-2.png', element_type: Constants.ElementType.OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '125A 400V CEE 5P' },\r\n            { name: 'Plugs@3', type: ItemTypes.PLUGS_3, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-3.png', element_type: Constants.ElementType.OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '63A 400V CEE 5P' },\r\n            { name: 'Plugs@4', type: ItemTypes.PLUGS_4, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-4.png', element_type: Constants.ElementType.OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '125A 400V CEE 5P' },\r\n            { name: 'Plugs@5', type: ItemTypes.PLUGS_5, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-5.png', element_type: Constants.ElementType.OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '63A 400V CEE 5P' },\r\n            { name: 'Sockets@1', type: ItemTypes.SOCKETS_1, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 1, image: 'images/dist_box/Output-Socket-1.png', element_type: Constants.ElementType.OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '125A 400V CEE 5P' },\r\n            { name: 'Sockets@2', type: ItemTypes.SOCKETS_2, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 1, image: 'images/dist_box/Output-Socket-2.png', element_type: Constants.ElementType.OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '63A 400V CEE 5P' },\r\n            { name: 'Sockets@3', type: ItemTypes.SOCKETS_3, uniqid: null, \r\n            distribution: null, left: 0, top: 0,   index: 1, image: 'images/dist_box/Output-Socket-3.png', element_type: Constants.ElementType.OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '125A 400V CEE 5P' },\r\n            { name: 'Pilot-Lights', type: ItemTypes.PILOT_LIGHTS, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 2, image: 'images/dist_box/pilot-lights.gif', element_type: Constants.ElementType.ADDONS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"cartesian\", description: 'PILOT LIGHTS' },\r\n            { name: 'Multimeter', type: ItemTypes.MULTIMETER, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 3, image: 'images/dist_box/multimeter.png', element_type: Constants.ElementType.THROUGH_OUTPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"cartesian\", description: 'MULTIMETER' },\r\n            { name: 'Live-Pins-Input', type: ItemTypes.LIVE_PINS_INPUT, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 4, image: 'images/dist_box/Live-Pins-Inputs.png', element_type: Constants.ElementType.INPUTS, \r\n            size: {width: Constants.SVG_ELEMENTS.FULL_WIDTH, height: '47px'}, distribution_name: \"templated\", description: <b>400A Power Lock Set <br/> (with 250A Protection)</b> },\r\n            { name: 'Loop-Through', type: ItemTypes.LIVE_PINS_OUTPUT, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 5, image: 'images/dist_box/Live-Pins-Outputs.png', element_type: Constants.ElementType.INPUTS, \r\n            size: {width: Constants.SVG_ELEMENTS.FULL_WIDTH, height: '47px'}, distribution_name: \"templated\", description: '400A Power Lock Set' },\r\n            { name: 'Pins-Input@1', type: ItemTypes.PINS_INPUT_1, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 4, image: 'images/dist_box/Inputs-Pin-1.png', element_type: Constants.ElementType.INPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '63A 400V CEE 5P' },\r\n            { name: 'Pins-Input@2', type: ItemTypes.PINS_INPUT_2, uniqid: null, \r\n            distribution: null, left: 0, top: 0,  index: 5, image: 'images/dist_box/Inputs-Pin-2.png', element_type: Constants.ElementType.INPUTS, \r\n            size: {width: '45px', height: '45px'}, distribution_name: \"templated\", description: '125A 400V CEE 5P' },\r\n        ];\r\n        const dustbins = [\r\n            { accepts: allTypes },\r\n        ];\r\n        const distributions = [\r\n            { accepts: [ItemTypes.PILOT_LIGHTS, ItemTypes.MULTIMETER], lastDroppedItem: null, \r\n                totalDroppedItems: cartesianDroppedItems, e_name: \"cartesian\" },\r\n            { accepts: plugsAndSockets, lastDroppedItem: null, \r\n                totalDroppedItems: templatedDroppedItems, e_name: \"templated\" },\r\n        ];\r\n        this.setDistributionSize = this.setDistributionSize.bind(this);\r\n        this.setDistributions = this.setDistributions.bind(this);\r\n        this.setDroppedBoxNames = this.setDroppedBoxNames.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n        this.handleDustBinDrop = this.handleDustBinDrop.bind(this);\r\n        this.state['boxes'] = boxes;\r\n        this.state['distributions'] = distributions;\r\n        this.state['dustbins'] = dustbins;\r\n        this.setTotalDroppedItems = this.setTotalDroppedItems.bind(this);\r\n        this.getTotalDroppedItems = this.getTotalDroppedItems.bind(this);\r\n        this.saveTotalDroppedItems = this.saveTotalDroppedItems.bind(this);\r\n    }\r\n\r\n    handleDustBinDrop(num, item) {\r\n        const distribution = item.distribution;\r\n        let droppedItems = this.state['distributions'][distribution].totalDroppedItems;\r\n        \r\n        // search by uniqid\r\n        let newDroppedItems = [];\r\n        for(var i = 0; i < droppedItems.length; i++) {\r\n            if(item.uniqid === droppedItems[i].uniqid) {\r\n                //found = i;\r\n            } else {\r\n                newDroppedItems.push(droppedItems[i]);\r\n            }\r\n        }\r\n\r\n        this.setDistributions(update(this.state['distributions'], {\r\n            [distribution]: {\r\n                totalDroppedItems: {\r\n                    $set: newDroppedItems\r\n                }\r\n            },\r\n        }))\r\n    }\r\n\r\n    setDistributions(distributions) {\r\n        this.setState({distributions: distributions});\r\n    }\r\n\r\n    setDroppedBoxNames(droppedBoxNames) {\r\n        this.setState({droppedBoxNames: droppedBoxNames});\r\n    }\r\n\r\n    getTotalDroppedItems(index) {\r\n        return this.state['distributions'][index].totalDroppedItems;\r\n    }\r\n\r\n    setTotalDroppedItems(items, index, e_name) {\r\n        update(this.state['distributions'], {\r\n            [index]: {\r\n                totalDroppedItems: {\r\n                    $set: items\r\n                }\r\n            },\r\n        });\r\n        this.saveTotalDroppedItems(items, e_name, index);\r\n    }\r\n\r\n    saveTotalDroppedItems(items, e_name, index) {\r\n        if(items) {\r\n            localStorage.setItem(e_name + \": items\", JSON.stringify(this.state['distributions'][index].totalDroppedItems));\r\n        }\r\n    }\r\n\r\n    handleDrop(index, item) {\r\n        const { name } = item;\r\n        item.uniqid = Uniqid(item.name);\r\n        item.distribution = index;\r\n        this.setDroppedBoxNames(update(this.state['droppedBoxNames'], name ? { $push: [name] } : { $push: [] }));\r\n        this.setDistributions(update(this.state['distributions'], {\r\n            [index]: {\r\n                lastDroppedItem: {\r\n                    $set: item,\r\n                },\r\n                totalDroppedItems: {\r\n                    $push: [item]\r\n                }\r\n            },\r\n        }));\r\n        this.saveTotalDroppedItems(\r\n            this.state['distributions'][item.distribution].totalDroppedItems, \r\n            item.distribution_name,\r\n            item.distribution\r\n        );\r\n    }\r\n\r\n    setDistributionSize(distributionSize) {\r\n        this.setState({distributionSize: distributionSize});\r\n    }\r\n    \r\n    componentWillMount() {\r\n        const size = localStorage.getItem(\"cartesian: size\");\r\n        if (size) {\r\n            this.setDistributionSize(size);\r\n            $(\"#cartesian\").attr('data-size',this.state['distributionSize']);\r\n            $(\"#templated\").attr('data-size', this.state['distributionSize']);\r\n            $('#unit_size').val(this.state['distributionSize']);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // load from localStorage the distributions\r\n\r\n        const instance = this;\r\n        \r\n        function isDropped(boxName) {\r\n            return instance.state['droppedBoxNames'].indexOf(boxName) > -1;\r\n        }\r\n\r\n        // render the draggable box\r\n        function renderBox(item, index) {\r\n            return (<div className=\"draggable-box-container\" key={index}>\r\n                <DraggableBox key={index} id={index}\r\n                name={item.name} type={item.type} \r\n                uniqid={item.uniqid}\r\n                distribution={item.distribution}\r\n                image={item.image}\r\n                width={item.size.width}\r\n                height={item.size.height}\r\n                isDropped={isDropped(item.name)}\r\n                description={item.description}\r\n                distribution_name={item.distribution_name}\r\n                {...item} />\r\n            </div>)\r\n        }\r\n\r\n        let element_outputs = [], element_through_outputs = [], element_addons = [], element_inputs = [];\r\n        this.state['boxes'].map((item, index) => {\r\n            switch(item.element_type) {\r\n                case Constants.ElementType.INPUTS:\r\n                    element_inputs.push([item, index]);\r\n                    break;\r\n                case Constants.ElementType.OUTPUTS:\r\n                    element_outputs.push([item, index]);\r\n                    break;\r\n                case Constants.ElementType.THROUGH_OUTPUTS:\r\n                    element_through_outputs.push([item, index]);\r\n                    break;\r\n                case Constants.ElementType.ADDONS:\r\n                    element_addons.push([item, index]);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n\r\n        let colors = [\r\n            {size: '24U', color: 'rgb(50, 55, 165)'},\r\n            {size: '20U', color: 'rgb(150, 55, 105)'},\r\n            {size: '16U', color: 'rgb(20, 155, 105)'},\r\n            {size: '12U', color: 'rgb(50, 155, 165)'},\r\n            {size: '8U', color: 'rgb(150, 55, 165)'},\r\n        ];\r\n\r\n        return (<div className=\"AppInnerContainer\">\r\n\r\n    <div className=\"row\">\r\n        <div className=\"col col-lg-4 col-md-4 col-sm-4\" id=\"boxes_container_draggable_holder\">\r\n\r\n            <div className=\"boxes-container-draggable\" id=\"boxes_container_draggable\" key=\"1111\" sliding-panel=\"off\">\r\n\r\n                <div style={{ overflow: 'hidden', clear: 'both', marginTop: \"15px\",\r\n                position: 'relative' }} className=\"boxes-container\" key=\"3\">\r\n                    <em key=\"0\">{element_inputs.length > 0 ? element_inputs[0][0].element_type : ''}</em>\r\n                    <div key=\"1\" className=\"draggable-box-inputs\">\r\n                    {\r\n                        element_inputs.map((element, index) => (\r\n                            renderBox(element[0], element[1])\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ overflow: 'hidden', clear: 'both', marginTop: \"15px\",\r\n                position: 'relative' }} className=\"boxes-container\" key=\"1\">\r\n                    <em key=\"0\">{element_outputs.length > 0 ? element_outputs[0][0].element_type : ''}</em>\r\n                    <div key=\"1\" className=\"draggable-box-inputs\">\r\n                    {\r\n                        element_outputs.map((element, index) => (\r\n                            renderBox(element[0], element[1])\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ overflow: 'hidden', clear: 'both', marginTop: \"15px\",\r\n                position: 'relative' }} className=\"boxes-container\">\r\n                    <em key=\"0\">{element_through_outputs.length > 0 ? element_through_outputs[0][0].element_type : ''}</em>\r\n                    <div key=\"1\" className=\"draggable-box-inputs\">\r\n                    {\r\n                        element_through_outputs.map((element, index) => (\r\n                            renderBox(element[0], element[1])\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ overflow: 'hidden', clear: 'both', marginTop: \"15px\",\r\n                position: 'relative' }} className=\"boxes-container\" key=\"2\">\r\n                    <em key=\"0\">{element_addons.length > 0 ? element_addons[0][0].element_type : ''}</em>\r\n                    <div key=\"1\" className=\"draggable-box-inputs\">\r\n                    {\r\n                        element_addons.map((element, index) => (\r\n                            renderBox(element[0], element[1])\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"col col-lg-8 col-md-8 col-sm-8\" id=\"distros_designer\" sliding-panel=\"off\" style={{backgroundSize: (Singleton.__singletonRef.controller.state['value']-50+100)*0.45 + '%'}}>\r\n\r\n            <div style={{ overflow: 'hidden', clear: 'both' }} key=\"0000\">\r\n                <div style={style} className=\"templated-distributions-container\" key=\"1\">\r\n                    {this.state['distributions'].map(({ accepts, lastDroppedItem, totalDroppedItems, e_name }, index) => (\r\n                        <TableDist container={this} accept={accepts} \r\n                        lastDroppedItem={lastDroppedItem} \r\n                        totalDroppedItems={totalDroppedItems} \r\n                        e_name={e_name}\r\n                        onDrop={(item) => this.handleDrop(index, item)} key={index}></TableDist>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n        {this.state['dustbins'].map(({accepts}, num) => (\r\n            <DustBin key={num} accept={accepts} onDrop={(item) => this.handleDustBinDrop(num, item)}></DustBin>\r\n        ))}\r\n            \r\n        </div>);\r\n    }\r\n};\r\n\r\n\r\nexport default Container;","import MD5 from \"crypto-js/md5\";\r\n\r\nexport default function Uniqid(name) {\r\n    const now = new Date();\r\n    return MD5(name + \"/\" + now.getTime().toString()).toString();\r\n}","import React, { useState, useCallback } from 'react';\r\nimport { useDragLayer } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport { BoxDragPreview } from './BoxDragPreview';\r\nimport { snapToGrid } from './snapToGrid';\r\nimport { useDrag } from 'react-dnd';\r\nimport update from 'immutability-helper';\r\nimport { useEffect } from 'react'\r\nimport { fromEvent } from 'rxjs'\r\nimport { map, throttleTime } from 'rxjs/operators'\r\nimport Constants from './Constants';\r\nconst layerStyles = {\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    zIndex: 100,\r\n    marginLeft: \"-45%\",\r\n    width: '100%',\r\n    height: '100%',\r\n};\r\nfunction getItemStyles(initialOffset, currentOffset, clientOffset, isSnapToGrid) {\r\n    if (!initialOffset || !currentOffset) {\r\n        return {\r\n            display: 'none',\r\n        };\r\n    }\r\n    let { x, y } = clientOffset;\r\n    if (isSnapToGrid) {\r\n        x -= initialOffset.x + Constants.gridSize;\r\n        y -= initialOffset.y + Constants.gridSize;\r\n        [x, y] = snapToGrid(x, y);\r\n        x += initialOffset.x;\r\n        y += initialOffset.y;\r\n    }\r\n    const transform = `translate(${x}px, ${y}px)`;\r\n    return {\r\n        transform: transform,\r\n        WebkitTransform: transform,\r\n    };\r\n}\r\nexport const CustomDragLayer = (props) => {\r\n    const { itemType, isDragging, item, initialOffset, currentOffset, clientOffset } = useDragLayer((monitor) => ({\r\n        item: monitor.getItem(),\r\n        itemType: monitor.getItemType(),\r\n        initialOffset: monitor.getInitialClientOffset(),\r\n        currentOffset: monitor.getSourceClientOffset(),\r\n        clientOffset: monitor.getClientOffset(),\r\n        isDragging: monitor.isDragging(),\r\n        collect: (monitor) => {\r\n            return {\r\n                isOver: monitor.isOver(),\r\n                canDrop: monitor.canDrop(),\r\n                initialOffset: monitor.getInitialClientOffset(),\r\n                currentOffset: monitor.getSourceClientOffset(),\r\n                clientOffset: monitor.getClientOffset()\r\n            }\r\n        }\r\n    }));\r\n    let position = useMousePosition();\r\n\r\n    // mouse tracking\r\n    function useMousePosition() {\r\n        const [x, setX] = useState(null)\r\n        const [y, setY] = useState(null)\r\n        \r\n        useEffect(() => {\r\n            // Subscribe to the mousemove event\r\n            const sub = fromEvent(document, 'mousemove')\r\n            // Extract out current mouse position from the event\r\n            .pipe(map(event => [event.clientX, event.clientY]))\r\n            // We have closure over the updater functions for our two state variables\r\n            // Use these updaters to bridge the gap between RxJS and React\r\n            .subscribe(([newX, newY]) => {\r\n                setX(newX)\r\n                setY(newY)\r\n            })\r\n        \r\n            // When the component unmounts, remove the event listener\r\n            return () => {\r\n                sub.unsubscribe()\r\n            }\r\n            // We use [] here so that this effect fires exactly once.\r\n            // (After the first render)\r\n        }, [])\r\n\r\n        return { mouseX: x, mouseY: y }\r\n    }\r\n    function renderItem() {\r\n        switch (itemType) {\r\n            case ItemTypes.PLUGS_1:\r\n            case ItemTypes.PLUGS_2:\r\n            case ItemTypes.PLUGS_3: \r\n            case ItemTypes.PLUGS_4:\r\n            case ItemTypes.PLUGS_5:\r\n            case ItemTypes.SOCKETS_1:\r\n            case ItemTypes.SOCKETS_2: \r\n            case ItemTypes.SOCKETS_3:\r\n            case ItemTypes.PILOT_LIGHTS:\r\n            case ItemTypes.MULTIMETER:\r\n            case ItemTypes.LIVE_PINS_INPUT:\r\n            case ItemTypes.LIVE_PINS_OUTPUT:\r\n            case ItemTypes.PINS_INPUT_1: \r\n            case ItemTypes.PINS_INPUT_2:\r\n                // return <BoxDragPreview type={item.type} name={item.name} image={item.image} width={item.width} />;\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    if (!isDragging) {\r\n        return null;\r\n    }\r\n    let shortClassName = \"custom-drag-layer-item-\" + itemType;\r\n    // specify an id for styling purposes\r\n    let id = shortClassName + \"-\" + item.name;\r\n    return (<div style={layerStyles} className=\"custom-drag-layer\" id={id}>\r\n\t\t\t<div style={getItemStyles(initialOffset, currentOffset, clientOffset, props.snapToGrid)} className=\"custom-drag-layer-inner\">\r\n\t\t\t\t{renderItem()}\r\n\t\t\t</div>\r\n\t\t</div>);\r\n};\r\n","import React from 'react'\r\nimport Controller from './Controller'\r\nimport { ItemTypes } from './ItemTypes'\r\nimport $ from 'jquery'\r\nimport Constants from './Constants';\r\n\r\nclass FrontSide extends React.Component {\r\n\r\n    id = 'distribution_front_side'\r\n    viewBox = \"\"\r\n\r\n    state = {\r\n        change: false,\r\n        value: 50\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.viewBox = this.props.viewBox;\r\n        this.paper = window.Snap('#'+this.id)\r\n        this.g = this.paper.g();\r\n        this.image = this.image.bind(this);\r\n        this.objects = this.objects.bind(this);\r\n        this.type_mapping = this.type_mapping.bind(this);\r\n        this.importAllObjects = this.importAllObjects.bind(this);\r\n        this.importCartesianObjectsByCache = this.importCartesianObjectsByCache.bind(this);\r\n        this.importCartesianObjectsByCache = this.importCartesianObjectsByCache.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n        this.changeSlider = this.changeSlider.bind(this);\r\n        this.obtainViewBox = this.obtainViewBox.bind(this);\r\n\r\n        this.object_types = Object.fromEntries(this.type_mapping());\r\n        // import function is a Promise\r\n        this.importAllObjects(\"local_storage\").then((objects) => this.draw(objects)).catch(err => console.error(err))\r\n\r\n        let mousePosition = 0, instance = this;\r\n        $('#'+this.id).mousedown(function(event1) {\r\n            $(this).css('cursor', 'grab');\r\n            if(mousePosition == 0) {\r\n                mousePosition = {'x': event1.clientX, 'y': event1.clientY}\r\n            }\r\n            $(this).mousemove(function (event2) {\r\n                $(this).css('cursor', 'grab');\r\n                const difference = {'x': event2.clientX - mousePosition.x, 'y': event2.clientY - mousePosition.y};\r\n                let viewBox = instance.obtainViewBox();\r\n                viewBox[0] -= (difference.x);\r\n                viewBox[1] -= (difference.y);\r\n                viewBox = viewBox.map(v => v.toString())\r\n                instance.viewBox = viewBox.join(\" \");\r\n                instance.setState({change: !instance.state['change']})\r\n            });\r\n        }).mouseup(function () {\r\n            $(this).css('cursor', 'default');\r\n            $(this).unbind('mousemove');\r\n            mousePosition = 0\r\n        }).mouseout(function () {\r\n            $(this).css('cursor', 'default');\r\n            $(this).unbind('mousemove');\r\n        });\r\n\r\n        this.showGrid = this.showGrid.bind(this);\r\n        this.showWheel = this.showWheel.bind(this);\r\n    }\r\n\r\n    type_mapping() {\r\n        return new Map([\r\n            [ItemTypes.PILOT_LIGHTS, 'image'], \r\n            [ItemTypes.MULTIMETER, 'image']\r\n        ])\r\n    }\r\n\r\n    objects() {\r\n        return null;\r\n    }\r\n    \r\n    image(objects) {\r\n        for(var i = 0; i < objects.length; i++) {\r\n            let image = objects[i].image;\r\n            let width = parseInt(objects[i].width.replace('px', ''));\r\n            let height = parseInt(objects[i].height.replace('px', ''));\r\n            let element = this.paper.image(image, objects[i].left, objects[i].top, (width / Constants.SCALE.FRONT_SIDE).toString() + 'px', \r\n            (height / Constants.SCALE.FRONT_SIDE).toString() + 'px');\r\n            this.g.add(element);\r\n        }\r\n    }\r\n\r\n    importAllObjects(cache) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                if(cache == \"local_storage\") {\r\n                    this.objects = this.importCartesianObjectsByCache()\r\n                } else if(cache == \"database\") {\r\n                    this.objects = this.importCartesianObjectsFromDatabase()\r\n                }\r\n            } catch(err) {\r\n                reject(err)\r\n            }\r\n            resolve(this.objects)\r\n        })\r\n    }\r\n\r\n    importCartesianObjectsByCache() {\r\n        let objects = window.localStorage.getItem(\"cartesian: items\");\r\n        return JSON.parse(objects);\r\n    }\r\n\r\n    importCartesianObjectsFromDatabase() {\r\n        return null;\r\n    }\r\n\r\n    draw(objects) {\r\n        var function_to_execute = null;\r\n        for(var i in objects) {\r\n            if(objects[i].type in this.object_types) {\r\n                function_to_execute = this.object_types[objects[i].type];\r\n            }\r\n        }\r\n        if(function_to_execute != null) {\r\n            this[function_to_execute](objects) // call this.image function\r\n        }\r\n    }\r\n\r\n    obtainViewBox(vb) {\r\n        let viewBox = vb.split(\" \").map(v => parseInt(v)); // viewBox array\r\n        return viewBox;\r\n    }\r\n\r\n    changeSlider(event) {\r\n        let vb = this.obtainViewBox(this.props.viewBox);\r\n        let viewBox = this.obtainViewBox(this.viewBox);\r\n        let value = event.target.value;\r\n        viewBox[2] = vb[2] + value * 20;\r\n        viewBox[3] = vb[3] + value * 20;\r\n        viewBox = viewBox.map(v => v.toString())\r\n        this.viewBox = viewBox.join(\" \");\r\n        // console.log(this.viewBox);\r\n        this.setState({change: !this.state['change']})\r\n        this.setState({'value': value});\r\n    }\r\n\r\n    showGrid() {\r\n\r\n    }\r\n\r\n    showWheel() {\r\n\r\n    }\r\n\r\n    render() {\r\n        $(document.getElementById(this.id)).attr('viewBox', this.viewBox);\r\n        return <div className=\"distros_controls\">\r\n            <input type=\"range\" name=\"zoom\" id=\"zoom\" min=\"-50\" max=\"0\" step=\"1\" value={this.state['value']} onChange={this.changeSlider} />\r\n        <input title=\"Show Grid\" type=\"checkbox\" name=\"show_grid\" id=\"show_grid\" value=\"\" onChange={this.showGrid} />\r\n        <input title=\"Display Wheel\" type=\"checkbox\" name=\"show_wheel\" id=\"show_wheel\" value=\"\" onChange={this.showWheel} /></div>\r\n        ;\r\n    }\r\n\r\n}\r\n\r\nexport default FrontSide;","import React from 'react'\r\nimport Controller from './Controller'\r\nimport { ItemTypes } from './ItemTypes'\r\nimport $ from 'jquery'\r\nimport Constants from './Constants';\r\n\r\nclass RearSide extends React.Component {\r\n\r\n    id = 'distribution_rear_side'\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.paper = window.Snap('#'+this.id)\r\n        this.image = this.image.bind(this);\r\n        this.objects = this.objects.bind(this);\r\n        this.type_mapping = this.type_mapping.bind(this);\r\n        this.importAllObjects = this.importAllObjects.bind(this);\r\n        this.importCartesianObjectsByCache = this.importCartesianObjectsByCache.bind(this);\r\n        this.importCartesianObjectsByCache = this.importCartesianObjectsByCache.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n\r\n        this.object_types = Object.fromEntries(this.type_mapping());\r\n        // import function is a Promise\r\n        this.importAllObjects(\"local_storage\").then((objects) => this.draw(objects)).catch(err => console.error(err))\r\n\r\n        let mousePosition = 0, instance = this;\r\n        $('#'+this.id).mousedown(function(event1) {\r\n            $(this).css('cursor', 'grab');\r\n            if(mousePosition == 0) {\r\n                mousePosition = {'x': event1.clientX, 'y': event1.clientY}\r\n            }\r\n            $(this).mousemove(function (event2) {\r\n                $(this).css('cursor', 'grab');\r\n                const difference = {'x': event2.clientX - mousePosition.x, 'y': event2.clientY - mousePosition.y};\r\n                let viewBox = instance.obtainViewBox();\r\n                viewBox[0] -= (difference.x);\r\n                viewBox[1] -= (difference.y);\r\n                viewBox = viewBox.map(v => v.toString())\r\n                instance.viewBox = viewBox.join(\" \");\r\n                instance.setState({change: !instance.state['change']})\r\n            });\r\n        }).mouseup(function () {\r\n            $(this).css('cursor', 'default');\r\n            $(this).unbind('mousemove');\r\n            mousePosition = 0\r\n        }).mouseout(function () {\r\n            $(this).css('cursor', 'default');\r\n            $(this).unbind('mousemove');\r\n        });\r\n    }\r\n\r\n    type_mapping() {\r\n        return new Map([\r\n            [ItemTypes.LIVE_PINS_INPUT, this.image],\r\n            [ItemTypes.LIVE_PINS_OUTPUT, this.image],\r\n            [ItemTypes.PINS_INPUT_1, this.image],\r\n            [ItemTypes.PINS_INPUT_2, this.image],\r\n            [ItemTypes.PLUGS_1, this.image],\r\n            [ItemTypes.PLUGS_2, this.image],\r\n            [ItemTypes.PLUGS_3, this.image],\r\n            [ItemTypes.PLUGS_4, this.image],\r\n            [ItemTypes.PLUGS_5, this.image]\r\n        ]);\r\n    }\r\n\r\n    objects() {\r\n        return null;\r\n    }\r\n    \r\n    image(objects) {\r\n        for(var i = 0; i < objects.length; i++) {\r\n            let image = objects[i].image;\r\n            let width = parseInt(objects[i].width.replace('px', ''));\r\n            let height = parseInt(objects[i].height.replace('px', ''));\r\n            this.paper.image(image, objects[i].left, objects[i].top, (width / Constants.SCALE.FRONT_SIDE).toString() + 'px', \r\n            (height / Constants.SCALE.FRONT_SIDE).toString() + 'px')\r\n        }\r\n    }\r\n\r\n    importAllObjects(cache) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                if(cache == \"local_storage\") {\r\n                    this.objects = this.importCartesianObjectsByCache()\r\n                } else if(cache == \"database\") {\r\n                    this.objects = this.importCartesianObjectsFromDatabase()\r\n                }\r\n            } catch(err) {\r\n                reject(err)\r\n            }\r\n            resolve(this.objects)\r\n        })\r\n    }\r\n\r\n    importCartesianObjectsByCache() {\r\n        let objects = window.localStorage.getItem(\"cartesian: items\");\r\n        return JSON.parse(objects);\r\n    }\r\n\r\n    importCartesianObjectsFromDatabase() {\r\n        return null;\r\n    }\r\n\r\n    draw(objects) {\r\n        var function_to_execute = null;\r\n        for(var i in objects) {\r\n            if(objects[i].type in this.object_types) {\r\n                function_to_execute = this.object_types[objects[i].type];\r\n            }\r\n        }\r\n        if(function_to_execute != null) {\r\n            this[function_to_execute](objects) // call this.image function\r\n        }\r\n    }\r\n\r\n    obtainViewBox() {\r\n        let viewBox = this.viewBox.split(\" \").map(v => parseInt(v)); // viewBox array\r\n        return viewBox;\r\n    }\r\n\r\n    render() {\r\n        // alert(this.props.viewBox)\r\n        $(document.getElementById(this.id)).attr('viewBox', this.props.viewBox);\r\n        return <input type=\"range\" name=\"zoom\" id=\"zoom\" min=\"0\" max=\"50\" step=\"1\" onChange={this.changeSlider} />;\r\n    }\r\n\r\n}\r\n\r\nexport default RearSide;","import React, { useState, useCallback, useEffect } from 'react';\r\nimport Container from './Container';\r\nimport '../style/fontawesome.min.css';\r\nimport '../bootstrap-grid.min.css';\r\nimport { CustomDragLayer } from './CustomDragLayer';\r\nimport FrontSide from './FrontSide';\r\nimport RearSide from './RearSide';\r\nimport Singleton from './Singleton';\r\nimport $ from 'jquery';\r\nimport Constants from './Constants';\r\n\r\nexport default class Controller extends React.Component {\r\n    \r\n    colors = [\r\n        {size: '24U', color: 'rgb(50, 55, 165)'},\r\n        {size: '20U', color: 'rgb(150, 55, 105)'},\r\n        {size: '16U', color: 'rgb(20, 155, 105)'},\r\n        {size: '12U', color: 'rgb(50, 155, 165)'},\r\n        {size: '8U', color: 'rgb(150, 55, 165)'},\r\n    ];\r\n\r\n    state = {\r\n        svg_monitoring: false,\r\n        svg_power: false,\r\n        snapToGridAfterDrop: true,\r\n        snapToGridWhileDragging: true,\r\n        viewBox: '',\r\n        value: 10,\r\n        change: false\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        Singleton.__singletonRef = new Singleton();\r\n        Singleton.__singletonRef.controller = this;\r\n        this.changeToMonitoring = this.changeToMonitoring.bind(this);\r\n        this.changeToPower = this.changeToPower.bind(this);\r\n        this.changeToDefault = this.changeToDefault.bind(this);\r\n        this.cartesianWidth = null; this.cartesianHeight = null; this.templateWidth = null; this.templateHeight = null;\r\n        this.changeGridSizes = this.changeGridSizes.bind(this);\r\n        this.showPanel = this.showPanel.bind(this);\r\n        if(JSON.parse(localStorage.getItem(\"designer: slider\")) == true) {\r\n            this.sliding = JSON.parse(localStorage.getItem(\"designer: slider\"));\r\n        } else {\r\n            this.sliding = false;\r\n        }\r\n        this.toggleSliging = this.toggleSliging.bind(this);\r\n        this.changeUnitSize = this.changeUnitSize.bind(this);\r\n    }\r\n\r\n    changeToMonitoring() {\r\n        this.setState({svg_monitoring: true, svg_power: false, viewBox: '0 0 ' + (this.cartesianWidth * Constants.SCALE.FRONT_SIDE).toString() + \" \" + \r\n        (this.cartesianHeight * Constants.SCALE.FRONT_SIDE).toString()})\r\n        $(document.body).css('overflow', 'hidden');\r\n        $(document.documentElement).css('overflow', 'hidden');\r\n    }\r\n\r\n    changeToPower() {\r\n        this.setState({svg_monitoring: false, svg_power: true, viewBox: '0 0 ' + (this.templateWidth * Constants.SCALE.REAR_SIDE).toString() + \" \" + \r\n            (this.cartesianHeight * Constants.SCALE.REAR_SIDE).toString()})\r\n        $(document.body).css('overflow', 'hidden');\r\n        $(document.documentElement).css('overflow', 'hidden');\r\n    }\r\n\r\n    changeToDefault() {\r\n        this.setState({svg_monitoring: false, svg_power: false, viewBox: ''})\r\n        $(document.body).css('overflow', 'visible');\r\n        $(document.documentElement).css('overflow', 'visible');\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.cartesianWidth) {\r\n            this.cartesianWidth = $('.cartesian').width()\r\n        }\r\n        if(!this.cartesianHeight) {\r\n            this.cartesianHeight = $('.cartesian').height()\r\n        }\r\n        if(!this.templateWidth) {\r\n            this.templateWidth = $('.templated').width()\r\n        }\r\n        if(!this.templateHeight) {\r\n            this.templateHeight = $('.templated').height()\r\n        }\r\n        if(localStorage.getItem(\"cartesian: size\")) {\r\n            $(document.getElementById(\"cartesian\")).attr('data-size', localStorage.getItem(\"cartesian: size\"));\r\n            $(document.getElementById(\"templated\")).attr('data-size', localStorage.getItem(\"templated: size\"));\r\n        }\r\n    }\r\n\r\n    // #cartesian_distribution_container.height()\r\n    // #templated_distribution_container.height()\r\n\r\n    changeGridSizes(event) {\r\n        let value = (event.target.value - 50) + 100;\r\n        $(\"#cartesian_distribution_container\").css('backgroundSize', value + '%');\r\n        $(\"#templated_distribution_container\").css('backgroundSize', value + '%');\r\n        $(\"#distros_designer\").css('backgroundSize', (value * 0.45) + '%');\r\n        localStorage.setItem(\"cartesian: grid\", JSON.stringify({'size': value}));\r\n        localStorage.setItem(\"templated: grid\", JSON.stringify({'size': value}));\r\n        this.setState({'value': event.target.value});\r\n    }\r\n\r\n    componentWillMount() {\r\n        let cartesian_value = JSON.parse(localStorage.getItem(\"cartesian: grid\"));\r\n        if(cartesian_value && ('size' in cartesian_value)) {\r\n            this.setState({value: cartesian_value['size'] - 100 + 50});\r\n        }\r\n    }\r\n\r\n    showPanel(event) {\r\n        this.toggleSliging();\r\n        $('#boxes_container_draggable, #distros_designer').attr('sliding-panel', (this.sliding ? 'on' : 'off'));\r\n        $(event.target).toggleClass(\"fa-anchor\").toggleClass(\"fa-bars\");\r\n        $('#distros_designer').toggleClass(\"col-lg-8 col-sm-8 col-md-8\").toggleClass(\"col-lg-12 col-sm-12 col-md-12\");\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    toggleSliging() {\r\n        this.sliding = !this.sliding;\r\n        localStorage.setItem(\"designer: slider\", this.sliding.toString());\r\n        $('#boxes_container_draggable').css('width', '100%');       \r\n    }\r\n\r\n    changeUnitSize(event) {\r\n        let select = event.target;\r\n        $(document.getElementById(\"cartesian\")).attr('data-size', $(select).val());\r\n        $(document.getElementById(\"templated\")).attr('data-size', $(select).val());\r\n        localStorage.setItem(\"cartesian: size\", $(select).val());\r\n        localStorage.setItem(\"templated: size\", $(select).val());\r\n        let heights = new Map([\r\n            ['24U', 1137],\r\n            ['20U', 937],\r\n            ['16U', 743],\r\n            ['12U', 550],\r\n            ['8U', 350],\r\n        ]);\r\n        heights = Object.fromEntries(heights);\r\n        $(\"#templated, #cartesian\").css('height', ($(document).width() * 0.40 / 681 * 1455).toString() + \"px\");\r\n        $(\"#templated\" + \"_distribution_container\").css('height', \r\n        (heights[$(select).val()] * $(document.getElementById(\"templated\")).outerWidth() / 681).toString() + \"px\");\r\n        $(\"#cartesian_distribution_container\").css('height', \r\n        (heights[$(select).val()] * $(document.getElementById(\"cartesian\")).outerWidth() / 681).toString() + \"px\"); // outerWidth\r\n    }\r\n\r\n    render() {\r\n        let elem = null;\r\n        let designer = null, \r\n        buttons = <div className=\"buttons\">\r\n            <div className=\"header-logo row\">\r\n                <div className=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                    <h2 className=\"header-tagline\" style={{color: '#b00110'}}>Customize your Distro</h2>\r\n                </div>\r\n                <div className=\"col col-lg-4 col-md-4 col-sm-4\" id=\"header_controls\">\r\n                    <button onClick={this.changeToMonitoring}>Monitoring</button>\r\n                    <button onClick={this.changeToPower}>Power</button><br/>\r\n                    <input type=\"range\" name=\"zoom\" id=\"zoom\" min=\"0\" max=\"100\" step=\"1\" value={this.state['value']} onChange={this.changeGridSizes} /><br/>\r\n                    <select defaultValue={localStorage.getItem(\"cartesian: size\")} name=\"unit_size\" id=\"unit_size\" style={{fontSize: '48px', color: 'rgb(50, 55, 165)'}} onChange={this.changeUnitSize}>\r\n                        {this.colors.map(({ size, color }, index) => (\r\n                            <option key={size} style={{fontSize: '48px', color: color}} value={size}>\r\n                                {size}\r\n                            </option>\r\n                        ))}\r\n                    </select><br/>\r\n                </div>\r\n                <div className=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                    <div className=\"header-logo-image-container\">\r\n                        <img src=\"images/logo/power_distros_logo-01.png\" width=\"60%\" alt=\"Power Distros Logo\" title=\"Power Distros Logo\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"header-tag-full\" style={{padding: '3px 20px', width: '100%', backgroundColor: '#4a0d12', color: 'white', fontSize: '24px', textAlign: 'left'}}>\r\n                <i className=\"fas fa-anchor\" style={{color: 'red', cursor: 'alias'}} onClick={this.showPanel}></i>\r\n                <nav className=\"menu-navigation\">\r\n                    <ul className=\"menu_navigation\" id=\"menu_navigation\">\r\n                        <li className=\"menu-item\">NEW</li>\r\n                        <li className=\"menu-item\">OPEN</li>\r\n                        <li className=\"menu-item\">SAVE</li>\r\n                        <li className=\"menu-item\">PRINT</li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>;\r\n        if(this.state['svg_monitoring'] == true) {\r\n            elem = <FrontSide viewBox={this.state['viewBox']} />;\r\n        } else if(this.state['svg_power'] == true) {\r\n            elem = <RearSide viewBox={this.state['viewBox']} />;\r\n        } else {\r\n            designer = <div className=\"bodyContainer\">\r\n            <div className=\"AppInnerContainerHolder\">\r\n                <Container ref={(ref) => this.containerRef = ref} snapToGrid={this.state['snapToGridAfterDrop']}/>\r\n            </div></div>;\r\n        }\r\n        return (<div className=\"container-fluid\">\r\n\r\n            { buttons }\r\n            \r\n            { designer }\r\n\r\n            { elem }\r\n\r\n        </div>);\r\n    }\r\n}","import React from 'react'\r\nimport Controller from './Controller'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\n\r\nfunction DrawingApp() {\r\n    return (\r\n        <div className=\"App\">\r\n            <DndProvider backend={HTML5Backend}>\r\n                <Controller />\r\n            </DndProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawingApp;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport DrawingApp from './components/DrawingApp'\n\nfunction App() {\n  return (\n    <DrawingApp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}