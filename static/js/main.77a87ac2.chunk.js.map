{"version":3,"sources":["components/Constants.js","components/snapToGrid.js","components/ItemTypes.js","components/DistributionMenu.js","components/GridBox.js","components/HighlightComponent.js","components/Distribution.js","components/DustBin.js","components/Box.js","components/DraggableBox.js","components/TableDist.js","components/Container.js","components/Uniqid.js","components/CustomDragLayer.js","components/FrontSide.js","components/RearSide.js","components/Singleton.js","components/Controller.js","components/DrawingApp.js","App.js","reportWebVitals.js","index.js"],"names":["Constants","useLocalStorage","gridSize","ElementType","OUTPUTS","FRONTS","ADDONS","INPUTS","SVG_ELEMENTS","FULL_WIDTH","SCALE","FRONT_SIDE","REAR_SIDE","snapToGrid","x","y","Math","round","ItemTypes","DistributionMenu","props","this","image","name","width","height","className","id","src","alt","title","data","onClick","handleClick","React","Component","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","float","widths","GridBox","type","uniqid","distribution","top","left","shortClassName","e_name","isDropped","useDrag","item","collect","monitor","getItem","opacity","isDragging","initialOffset","getInitialClientOffset","currentOffset","getSourceClientOffset","clientOffset","getClientOffset","canDrag","drag","ref","HighlightComponent","$","document","getElementById","dragElementId","position","display","zIndex","toString","textAlign","fontSize","lineHeight","Distribution","accept","totalDroppedItems","lastDroppedItem","onDrop","useDrop","drop","isOver","canDrop","undefined","hover","highlightComponent","localStorage","setItem","JSON","stringify","$elem","useState","setX","setY","useEffect","sub","fromEvent","pipe","map","event","clientX","clientY","subscribe","newX","newY","window","scrollX","scrollY","unsubscribe","doSnapToGrid","distribution_name","offset","useMousePosition","index","marginLeft","color","DustBin","Box","getStyles","transform","WebkitTransform","DraggableBox","preview","getEmptyImage","captureDraggingState","TableDist","css","outerWidth","plugsAndSockets","allTypes","Container","cartesianDroppedItems","templatedDroppedItems","parse","accepts","distributions","setDistributions","element_type","size","boxes","droppedBoxNames","setDroppedBoxNames","handleDrop","useCallback","now","Date","MD5","getTime","Uniqid","update","$push","$set","dustbins","handleDustBinDrop","num","droppedItems","newDroppedItems","i","length","push","getDifferenceFromInitialOffset","renderBox","boxName","indexOf","element_outputs","element_fronts","element_addons","element_inputs","overflow","clear","marginTop","element","FrontSide","viewBox","state","change","paper","Snap","g","bind","objects","type_mapping","importAllObjects","importCartesianObjectsByCache","draw","changeSlider","obtainViewBox","object_types","Object","fromEntries","then","catch","err","console","error","mousePosition","instance","mousedown","event1","mousemove","event2","difference","v","join","setState","mouseup","unbind","mouseout","Map","parseInt","replace","add","cache","Promise","resolve","reject","importCartesianObjectsFromDatabase","function_to_execute","split","value","target","attr","min","max","step","onChange","RearSide","Singleton","controller","Controller","__singletonRef","svg_monitoring","svg_power","snapToGridAfterDrop","snapToGridWhileDragging","changeToMonitoring","changeToPower","changeToDefault","cartesianWidth","cartesianHeight","templateWidth","templateHeight","body","documentElement","elem","designer","buttons","DrawingApp","DndProvider","backend","HTML5Backend","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77a87ac2.chunk.js","sourcesContent":["const ElementType = {\r\n    OUTPUTS: 'Outputs',\r\n    FRONTS: 'Front',\r\n    ADDONS: 'Addons',\r\n    INPUTS: 'Inputs'\r\n};\r\n\r\nconst SCALE = {\r\n    FRONT_SIDE: 5,\r\n    REAR_SIDE: 5\r\n};\r\n\r\nconst SVG_ELEMENTS = {\r\n    FULL_WIDTH: '480px'\r\n};\r\n\r\nconst Constants = {\r\n    useLocalStorage: true,\r\n    gridSize: 16,\r\n    ElementType: ElementType,\r\n    SVG_ELEMENTS: SVG_ELEMENTS,\r\n    SCALE: SCALE\r\n};\r\n\r\nexport default Constants;\r\n","import Constants from './Constants';\r\n\r\nexport function snapToGrid(x, y) {\r\n    const snappedX = Math.round(x / Constants.gridSize) * Constants.gridSize;\r\n    const snappedY = Math.round(y / Constants.gridSize) * Constants.gridSize;\r\n    return [snappedX, snappedY];\r\n}\r\n  ","export const ItemTypes = {\r\n    PLUGS: 'Plugs',\r\n    SOCKETS: 'Sockets',\r\n    PILOT_LIGHTS: 'Pilot Lights',\r\n    MULTIMETER: 'Multimeter',\r\n    LIVE_PINS_INPUT: 'Live Pins Input',\r\n    LIVE_PINS_OUTPUT: 'Loop Through',\r\n    PINS_INPUT_1: 'Pins Input@1',\r\n    PINS_INPUT_2: 'Pins Input@2',\r\n    PLUGS_1: 'Plugs@1',\r\n    PLUGS_2: 'Plugs@2',\r\n    PLUGS_3: 'Plugs@3',\r\n    PLUGS_4: 'Plugs@4',\r\n    PLUGS_5: 'Plugs@5',\r\n    SOCKETS_1: 'Sockets@1',\r\n    SOCKETS_2: 'Sockets@2',\r\n    SOCKETS_3: 'Sockets@3',\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\nclass DistributionMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    handleClick() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        let { image, name, width, height } = this.props;\r\n        return (\r\n            <div className=\"distribution-box-menu\">\r\n                <ContextMenuTrigger id=\"distribution-box-contextmenu\">\r\n                    <div className=\"well\"></div>\r\n                    <img src={image} alt={name} title={name} width={width} height={height} />\r\n                </ContextMenuTrigger>\r\n            \r\n                <ContextMenu id=\"distribution-box-contextmenu\">\r\n                    <MenuItem data={{}} onClick={this.handleClick}>Remove</MenuItem>\r\n                </ContextMenu>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DistributionMenu;","import React, { useState, useCallback } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport update from 'immutability-helper';\r\nimport { useEffect } from 'react'\r\nimport { fromEvent } from 'rxjs'\r\nimport { map, throttleTime } from 'rxjs/operators'\r\nimport { ItemTypes } from './ItemTypes';\r\nimport { snapToGrid as doSnapToGrid } from './snapToGrid';\r\nimport DistributionMenu from './DistributionMenu';\r\nimport $ from 'jquery';\r\nconst style = {\r\n    border: '1px dashed gray',\r\n    backgroundColor: 'transparent',\r\n    padding: '0.1px',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    cursor: 'move',\r\n    float: 'left',\r\n};\r\nlet styleCopy = {};\r\n// define the widths here\r\nlet widths = {};\r\nwidths[ItemTypes.PLUGS] = \"60px\";\r\nwidths[ItemTypes.SOCKETS] = \"60px\";\r\nwidths[ItemTypes.PILOT_LIGHTS] = \"20px\";\r\nwidths[ItemTypes.MULTIMETER] = \"50px\";\r\nwidths[ItemTypes.LIVE_PINS_INPUT] = \"300px\";\r\nwidths[ItemTypes.LIVE_PINS_OUTPUT] = \"300px\";\r\nwidths[ItemTypes.PINS_INPUT_1] = \"60px\";\r\nwidths[ItemTypes.PINS_INPUT_2] = \"60px\";\r\nwidths[ItemTypes.PLUGS_1] = \"60px\";\r\nwidths[ItemTypes.PLUGS_2] = \"60px\";\r\nwidths[ItemTypes.PLUGS_3] = \"60px\";\r\nwidths[ItemTypes.PLUGS_4] = \"60px\";\r\nwidths[ItemTypes.PLUGS_5] = \"60px\";\r\nwidths[ItemTypes.SOCKETS_1] = \"60px\";\r\nwidths[ItemTypes.SOCKETS_2] = \"60px\";\r\nwidths[ItemTypes.SOCKETS_3] = \"60px\";\r\nexport const GridBox = ({ name, type, uniqid, distribution, image, top, left, e_name, isDropped }) => {\r\n    let shortClassName = \"grid-box-item-\" + name;\r\n    let className = \"grid-box \" + shortClassName;\r\n\r\n    // specify an id for styling purposes\r\n    let id = shortClassName + \"-\" + uniqid;\r\n\r\n    let width = widths[type];\r\n\r\n    // useDrag denotes draggable\r\n    const [{ opacity, initialOffset, currentOffset, clientOffset, item }, drag] = useDrag({\r\n        // add attributes here\r\n        item: { name, type, uniqid, distribution, image, top, left, width },\r\n        collect: (monitor) => ({\r\n            item: monitor.getItem(),\r\n            opacity: monitor.isDragging() ? 0.4 : 1,\r\n            initialOffset: monitor.getInitialClientOffset(),\r\n            currentOffset: monitor.getSourceClientOffset(),\r\n            clientOffset: monitor.getClientOffset(),\r\n            canDrag: monitor.canDrag()\r\n        })\r\n    });\r\n    function saveItem(item) {\r\n        let key = item.distribution == 0 ? \"cartesian: items\" : \"templated: items\";\r\n        let items = JSON.parse(localStorage.getItem(key));\r\n        for(var i in items) {\r\n            if(items[i] == item.uniqid) {\r\n                items[i] = item;\r\n                break;\r\n            }\r\n        }\r\n        localStorage.setItem(key, JSON.stringify(items));\r\n    }\r\n    return (<div ref={drag} style={{...style, opacity, top, left}} className={className} id={id}>\r\n            <DistributionMenu image={image} name={name} width={widths[type]} height=\"auto\" />\r\n\t\t</div>);\r\n};\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { fromEvent } from 'rxjs'\r\nimport { map, throttleTime } from 'rxjs/operators'\r\nimport { snapToGrid as doSnapToGrid } from './snapToGrid';\r\nimport $ from 'jquery';\r\n\r\nexport const HighlightComponent = ({ item, currentOffset, clientOffset }) => {\r\n    let width = $(document.getElementById(item.dragElementId)).width();\r\n    let height = $(document.getElementById(item.dragElementId)).height();\r\n\r\n    let id = \"highlight-component-\" + item.name;\r\n\r\n    return (\r\n        <div className=\"highlight-component\" id={id} style={{\r\n            position: 'absolute',\r\n            opacity: 0.4,\r\n            display: 'block',\r\n            zIndex: 100,\r\n            backgroundColor: 'pink',\r\n            width: (width).toString() + 'px',\r\n            height: (height).toString() + 'px',\r\n        }}></div>\r\n    )\r\n}","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { fromEvent } from 'rxjs'\r\nimport { map, throttleTime } from 'rxjs/operators'\r\nimport { snapToGrid as doSnapToGrid } from './snapToGrid';\r\nimport { useDrop } from 'react-dnd';\r\nimport { GridBox } from './GridBox';\r\nimport Constants from './Constants';\r\nimport { HighlightComponent } from './HighlightComponent';\r\nimport $ from 'jquery';\r\nconst useLocalStorage = Constants.useLocalStorage;\r\n\r\nlet style = {\r\n    marginBottom: '0.5rem',\r\n    padding: '5%',\r\n    textAlign: 'center',\r\n    fontSize: '1rem',\r\n    lineHeight: 'normal'\r\n};\r\n\r\nexport const Distribution = ({ accept, lastDroppedItem, totalDroppedItems, e_name, onDrop, }) => {\r\n    let currentItem = null;\r\n\r\n    // useDrop denotes droppable\r\n    const [{ isOver, canDrop, initialOffset, currentOffset, clientOffset, item }, drop] = useDrop({\r\n        accept,\r\n        drop: onDrop,\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n            initialOffset: monitor.getInitialClientOffset(),\r\n            currentOffset: monitor.getSourceClientOffset(),\r\n            clientOffset: monitor.getClientOffset(),\r\n            item: monitor.getItem()\r\n        }),\r\n        canDrop: (item, monitor) => {\r\n            return (item.distribution != null) || (item.distribution != undefined) ? false : true;\r\n        },\r\n        hover: (item, monitor) => {\r\n            currentItem = item;\r\n            // specify an id for styling purposes\r\n            let id = \"element-box-item-\" + item.name;\r\n            item.dragElementId = id;\r\n            item.highlightComponent = \"highlight-component-\" + item.name;\r\n            return false;\r\n        }\r\n    });\r\n    const isActive = isOver && canDrop;\r\n    let backgroundColor = 'transparent';\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n    else if (canDrop) {\r\n        backgroundColor = 'darkkhaki';\r\n    }\r\n    if(!totalDroppedItems) {\r\n        totalDroppedItems = [];\r\n    }\r\n    if(totalDroppedItems) {\r\n        localStorage.setItem(e_name + \": items\", JSON.stringify(totalDroppedItems));\r\n    }\r\n\r\n    let $elem = <div></div>;\r\n    if(item && clientOffset && currentOffset && document.getElementById(item.dragElementId)) {\r\n        $elem = <HighlightComponent item={item} currentOffset={currentOffset}\r\n        clientOffset={clientOffset} />\r\n    }\r\n\r\n    let position = useMousePosition();\r\n\r\n    // // mouse tracking\r\n    function useMousePosition() {\r\n        const [x, setX] = useState(null)\r\n        const [y, setY] = useState(null)\r\n\r\n        useEffect(() => {\r\n            // Subscribe to the mousemove event\r\n            const sub = fromEvent(document, 'drag')\r\n            // Extract out current mouse position from the event\r\n            .pipe(map(event => [event.clientX, event.clientY]))\r\n            // We have closure over the updater functions for our two state variables\r\n            // Use these updaters to bridge the gap between RxJS and React\r\n            .subscribe(([newX, newY]) => {\r\n                setX(newX + window.scrollX)\r\n                setY(newY + window.scrollY)\r\n            })\r\n\r\n            // When the component unmounts, remove the event listener\r\n            return () => {\r\n                sub.unsubscribe()\r\n            }\r\n            // We use [] here so that this effect fires exactly once.\r\n            // (After the first render)\r\n        }, [])\r\n\r\n        if(canDrop && item && document.getElementById(item.highlightComponent)) {\r\n            // left and top are saved on refresh\r\n            let [left, top] = doSnapToGrid(x, y);\r\n            if(item.distribution_name == \"cartesian\") {\r\n                document.getElementById(item.highlightComponent).style.left = left.toString() + \"px\";\r\n                document.getElementById(item.highlightComponent).style.top = top.toString() + \"px\";\r\n                document.getElementById(item.dragElementId).style.left = left.toString() + \"px\";\r\n                document.getElementById(item.dragElementId).style.top = top.toString() + \"px\";\r\n                item.left = left.toString() + \"px\";\r\n                item.top = top.toString() + \"px\";\r\n            } else if(item.distribution_name == \"templated\") {\r\n                let offset = $('#templated_distribution_container').offset();\r\n                document.getElementById(item.highlightComponent).style.left = (left-offset['left']).toString() + \"px\";\r\n                document.getElementById(item.highlightComponent).style.top = (top-offset['top']).toString() + \"px\";\r\n                document.getElementById(item.dragElementId).style.left = (left-offset['left']).toString() + \"px\";\r\n                document.getElementById(item.dragElementId).style.top = (top-offset['top']).toString() + \"px\";\r\n                item.left = (left-offset['left']).toString() + \"px\";\r\n                item.top = (top-offset['top']).toString() + \"px\";\r\n            }\r\n        }\r\n\r\n        return { mouseX: x, mouseY: y }\r\n    }\r\n\r\n    return (<div style={{ ...style }} className={e_name} id={e_name}>\r\n\r\n            {$elem}\r\n\r\n            <div ref={drop} style={{ backgroundColor }} className=\"distribution_container\" id={e_name + \"_distribution_container\"}>\r\n                {\r\n                    totalDroppedItems.map((item, index) =>  {\r\n                        return (\r\n                            <GridBox name={item.name} type={item.type} uniqid={item.uniqid} key={item.index}\r\n                            distribution={item.distribution} image={item.image} e_name={e_name}\r\n                            top={item.top} left={item.left}\r\n                            isDropped={true} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\t\t</div>);\r\n};\r\n","import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport Constants from './Constants';\r\nconst style = {\r\n    // height: '350px',\r\n    marginRight: '10%',\r\n    marginLeft: '5%',\r\n    width: '90%',\r\n    marginBottom: '0.5rem',\r\n    color: 'white',\r\n    padding: Constants.gridSize.toString() + 'px',\r\n    textAlign: 'center',\r\n    fontSize: '5rem',\r\n    lineHeight: 'normal',\r\n};\r\nexport const DustBin = ({ accept, onDrop, }) => {\r\n    // useDrop denotes droppable\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept,\r\n        drop: onDrop,\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const isActive = isOver && canDrop;\r\n    let backgroundColor = '#222';\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n    else if (canDrop) {\r\n        backgroundColor = 'darkkhaki';\r\n    }\r\n    return (<div ref={drop} style={{ ...style, backgroundColor }} className=\"dustbin-container\">\r\n\t\tDUSTBIN</div>);\r\n};\r\n","import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nconst style = {\r\n    border: '0px none',\r\n    backgroundColor: 'white',\r\n    padding: '0px',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    cursor: 'move',\r\n    float: 'left'\r\n};\r\nexport const Box = ({ name, type, uniqid, distribution, image, width, height, distribution_name, isDropped }) => {\r\n    // useDrag denotes draggable\r\n    const [{ opacity }, drag] = useDrag({\r\n        // add item attributes here\r\n        item: { name, type, uniqid, distribution, image, width, height, distribution_name },\r\n        collect: (monitor) => {\r\n            return {\r\n                opacity: monitor.isDragging() ? 0.4 : 1\r\n            }\r\n        }\r\n    });\r\n    let className = \"box-item box-item-\" + name;\r\n    return (<div ref={drag} style={{ ...style, opacity }} className={className} id={\"element-box-item-\" + name}>\r\n            <img src={image} alt={name} title={name} width={width} height=\"auto\" />\r\n\t\t</div>);\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\nimport { Box } from './Box';\r\nfunction getStyles(left, top, isDragging) {\r\n    const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n    return {\r\n        // IE fallback: hide the real node using CSS when dragging\r\n        // because IE will ignore our custom \"empty image\" drag preview.\r\n        opacity: isDragging ? 0 : 1,\r\n        height: isDragging ? 0 : '',\r\n        transform: transform,\r\n        WebkitTransform: transform,\r\n        left: left,\r\n        top: top\r\n    };\r\n}\r\nexport const DraggableBox = (props) => {\r\n    const { name, type, uniqid, distribution, image, width, height, isDropped, left, top, distribution_name, id } = props;\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: { name, type, uniqid, distribution, image, width, distribution_name },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), { captureDraggingState: true });\r\n    }, []);\r\n    return (<div style={getStyles(left, top, isDragging)} className=\"draggable-box\" key={id}>\r\n            <Box name={name} type={type} uniqid={uniqid} distribution={distribution} image={image}\r\n            width={width} height={height} distribution_name={distribution_name}\r\n            isDropped={isDropped} />\r\n\t\t</div>);\r\n};\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport $ from 'jquery';\r\nimport { Distribution } from './Distribution';\r\n\r\nexport default class TableDist extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(document.getElementById(this.e_name)).css('height', ($(document).width() * 0.40 / 681 * 1455).toString() + \"px\");\r\n        document.getElementById(this.e_name + \"_distribution_container\").style.height = \r\n        (1137 * $(document.getElementById(this.e_name)).outerWidth() / 681).toString() + \"px\"; // outerWidth\r\n    }\r\n\r\n    render() {\r\n        const {accept, lastDroppedItem, totalDroppedItems, e_name, onDrop, index} = this.props;\r\n        this.e_name = e_name;\r\n        return (\r\n            <Distribution accept={accept} \r\n            lastDroppedItem={lastDroppedItem} \r\n            totalDroppedItems={totalDroppedItems} \r\n            e_name={e_name}\r\n            onDrop={onDrop} key={index}/>\r\n        )\r\n    }\r\n\r\n}","import React, { useState, useCallback } from 'react';\r\nimport { Distribution } from './Distribution';\r\nimport { DustBin } from './DustBin';\r\nimport { Box } from './Box';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport update from 'immutability-helper';\r\nimport Uniqid from './Uniqid';\r\nimport Constants from './Constants';\r\nimport { snapToGrid as doSnapToGrid } from './snapToGrid';\r\nimport { DraggableBox } from './DraggableBox';\r\nimport { useDrop } from 'react-dnd';\r\nimport TableDist from './TableDist';\r\nconst useLocalStorage = Constants.useLocalStorage;\r\n\r\nconst buckets = {\r\n    \"cartesian\": null, \r\n    \"templated\": null,\r\n};\r\n\r\nconst plugsAndSockets = [ItemTypes.PLUGS_1, ItemTypes.PLUGS_2, ItemTypes.PLUGS_3, ItemTypes.PLUGS_4, ItemTypes.PLUGS_5, \r\n    ItemTypes.SOCKETS_1, ItemTypes.SOCKETS_2, ItemTypes.SOCKETS_3, ItemTypes.LIVE_PINS_INPUT, ItemTypes.LIVE_PINS_OUTPUT, \r\n    ItemTypes.PINS_INPUT_1, ItemTypes.PINS_INPUT_2];\r\n    \r\n    const allTypes = [ItemTypes.PLUGS_1, ItemTypes.PLUGS_2, ItemTypes.PLUGS_3, ItemTypes.PLUGS_4, ItemTypes.PLUGS_5, \r\n        ItemTypes.SOCKETS_1, ItemTypes.SOCKETS_2, ItemTypes.SOCKETS_3, ItemTypes.PILOT_LIGHTS, \r\n        ItemTypes.MULTIMETER, ItemTypes.LIVE_PINS_INPUT, ItemTypes.LIVE_PINS_OUTPUT, \r\n    ItemTypes.PINS_INPUT_1, ItemTypes.PINS_INPUT_2];\r\n\r\nconst style = {\r\n    width: '100%',\r\n    // marginRight: '0.5rem',\r\n    marginBottom: '0.5rem',\r\n    color: '#ababab',\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    fontSize: '1rem',\r\n    lineHeight: 'normal',\r\n    float: 'left',\r\n};\r\n\r\nexport const Container = ({ snapToGrid }) => {\r\n    // load from localStorage the distributions\r\n\r\n    let cartesianDroppedItems = null, templatedDroppedItems = null;\r\n    if(useLocalStorage) {\r\n        cartesianDroppedItems = localStorage.getItem(\"cartesian\" + \": items\");\r\n        templatedDroppedItems = localStorage.getItem(\"templated\" + \": items\");\r\n        if(!cartesianDroppedItems) {\r\n            cartesianDroppedItems = [];\r\n        } else {\r\n            cartesianDroppedItems = JSON.parse(cartesianDroppedItems);\r\n        }\r\n        if(!templatedDroppedItems) {\r\n            templatedDroppedItems = [];\r\n        } else {\r\n            templatedDroppedItems = JSON.parse(templatedDroppedItems);\r\n        }\r\n    }\r\n    \r\n    // total dropped items overall including ones dropped in and dropped out of the grid\r\n    const [distributions, setDistributions] = useState([\r\n        { accepts: [ItemTypes.PILOT_LIGHTS, ItemTypes.MULTIMETER], lastDroppedItem: null, \r\n            totalDroppedItems: cartesianDroppedItems, e_name: \"cartesian\" },\r\n        { accepts: plugsAndSockets, lastDroppedItem: null, \r\n            totalDroppedItems: templatedDroppedItems, e_name: \"templated\" },\r\n    ]);\r\n    const [boxes, setBoxes] = useState([\r\n        { name: 'Plugs@1', type: ItemTypes.PLUGS_1, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-1.png', element_type: Constants.ElementType.OUTPUTS, \r\n        size: {width: '100px', height: '98px'}, distribution_name: \"templated\" },\r\n        { name: 'Plugs@2', type: ItemTypes.PLUGS_2, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-2.png', element_type: Constants.ElementType.OUTPUTS, \r\n        size: {width: '80px', height: '102px'}, distribution_name: \"templated\" },\r\n        { name: 'Plugs@3', type: ItemTypes.PLUGS_3, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-3.png', element_type: Constants.ElementType.OUTPUTS, \r\n        size: {width: '80px', height: '120px'}, distribution_name: \"templated\" },\r\n        { name: 'Plugs@4', type: ItemTypes.PLUGS_4, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-4.png', element_type: Constants.ElementType.OUTPUTS, \r\n        size: {width: '80px', height: '119px'}, distribution_name: \"templated\" },\r\n        { name: 'Plugs@5', type: ItemTypes.PLUGS_5, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 0, image: 'images/dist_box/Output-Plug-5.png', element_type: Constants.ElementType.OUTPUTS, \r\n        size: {width: '80px', height: '121px'}, distribution_name: \"templated\" },\r\n        { name: 'Sockets@1', type: ItemTypes.SOCKETS_1, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 1, image: 'images/dist_box/Output-Socket-1.png', element_type: Constants.ElementType.OUTPUTS, \r\n        size: {width: '80px', height: '89px'}, distribution_name: \"templated\" },\r\n        { name: 'Sockets@2', type: ItemTypes.SOCKETS_2, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 1, image: 'images/dist_box/Output-Socket-2.png', element_type: Constants.ElementType.OUTPUTS, \r\n        size: {width: '80px', height: '111px'}, distribution_name: \"templated\" },\r\n        { name: 'Sockets@3', type: ItemTypes.SOCKETS_3, uniqid: null, \r\n        distribution: null, left: 0, top: 0,   index: 1, image: 'images/dist_box/Output-Socket-3.png', element_type: Constants.ElementType.OUTPUTS, \r\n        size: {width: '80px', height: '122px'}, distribution_name: \"templated\" },\r\n        { name: 'Pilot-Lights', type: ItemTypes.PILOT_LIGHTS, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 2, image: 'images/dist_box/pilot-lights.gif', element_type: Constants.ElementType.FRONTS, \r\n        size: {width: '60px', height: '60px'}, distribution_name: \"cartesian\" },\r\n        { name: 'Multimeter', type: ItemTypes.MULTIMETER, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 3, image: 'images/dist_box/multimeter.png', element_type: Constants.ElementType.FRONTS, \r\n        size: {width: '60px', height: '60px'}, distribution_name: \"cartesian\" },\r\n        { name: 'Live-Pins-Input', type: ItemTypes.LIVE_PINS_INPUT, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 4, image: 'images/dist_box/Live-Pins-Inputs.png', element_type: Constants.ElementType.ADDONS, \r\n        size: {width: Constants.SVG_ELEMENTS.FULL_WIDTH, height: '67px'}, distribution_name: \"templated\" },\r\n        { name: 'Loop-Through', type: ItemTypes.LIVE_PINS_OUTPUT, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 5, image: 'images/dist_box/Live-Pins-Outputs.png', element_type: Constants.ElementType.ADDONS, \r\n        size: {width: Constants.SVG_ELEMENTS.FULL_WIDTH, height: '67px'}, distribution_name: \"templated\" },\r\n        { name: 'Pins-Input@1', type: ItemTypes.PINS_INPUT_1, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 4, image: 'images/dist_box/Inputs-Pin-1.png', element_type: Constants.ElementType.INPUTS, \r\n        size: {width: '80px', height: '90px'}, distribution_name: \"templated\" },\r\n        { name: 'Pins-Input@2', type: ItemTypes.PINS_INPUT_2, uniqid: null, \r\n        distribution: null, left: 0, top: 0,  index: 5, image: 'images/dist_box/Inputs-Pin-2.png', element_type: Constants.ElementType.INPUTS, \r\n        size: {width: '80px', height: '80px'}, distribution_name: \"templated\" },\r\n    ]);\r\n    const [droppedBoxNames, setDroppedBoxNames] = useState([]);\r\n    function isDropped(boxName) {\r\n        return droppedBoxNames.indexOf(boxName) > -1;\r\n    }\r\n    const handleDrop = useCallback((index, item) => {\r\n        const { name } = item;\r\n        item.uniqid = Uniqid(item.name);\r\n        item.distribution = index;\r\n        setDroppedBoxNames(update(droppedBoxNames, name ? { $push: [name] } : { $push: [] }));\r\n        setDistributions(update(distributions, {\r\n            [index]: {\r\n                lastDroppedItem: {\r\n                    $set: item,\r\n                },\r\n                totalDroppedItems: {\r\n                    $push: [item]\r\n                }\r\n            },\r\n        }));\r\n    }, [droppedBoxNames, distributions]);\r\n\r\n    const [dustbins, setDustBin] = useState([\r\n        { accepts: allTypes },\r\n    ]);\r\n    \r\n    const handleDustBinDrop = useCallback((num, item) => {\r\n        const distribution = item.distribution;\r\n        let droppedItems = distributions[distribution].totalDroppedItems;\r\n        \r\n        // search by uniqid\r\n        let newDroppedItems = [];\r\n        for(var i = 0; i < droppedItems.length; i++) {\r\n            if(item.uniqid === droppedItems[i].uniqid) {\r\n                //found = i;\r\n            } else {\r\n                newDroppedItems.push(droppedItems[i]);\r\n            }\r\n        }\r\n\r\n        setDistributions(update(distributions, {\r\n            [distribution]: {\r\n                totalDroppedItems: {\r\n                    $set: newDroppedItems\r\n                }\r\n            },\r\n        }))\r\n    }, [distributions]);\r\n\r\n    const [, drop] = useDrop({\r\n        accept: allTypes,\r\n        drop(item, monitor) {\r\n            const delta = monitor.getDifferenceFromInitialOffset();\r\n            // let left = Math.round(item.left + delta.x);\r\n            // let top = Math.round(item.top + delta.y);\r\n            // if (snapToGrid) {\r\n            //     ;\r\n            //     [left, top] = doSnapToGrid(left, top);\r\n            // }\r\n            return undefined;\r\n        },\r\n    });\r\n\r\n    // render the draggable box\r\n    function renderBox(item, index) {\r\n        return (<div className=\"draggable-box-container\">\r\n            <DraggableBox key={index} id={index}\r\n            name={item.name} type={item.type} \r\n            uniqid={item.uniqid}\r\n            distribution={item.distribution}\r\n            image={item.image}\r\n            width={item.size.width}\r\n            height={item.size.height}\r\n            isDropped={isDropped(item.name)}\r\n            distribution_name={item.distribution_name}\r\n            {...item} />\r\n        </div>)\r\n    }\r\n\r\n    let element_outputs = [], element_fronts = [], element_addons = [], element_inputs = [];\r\n    boxes.map((item, index) => {\r\n        switch(item.element_type) {\r\n            case Constants.ElementType.OUTPUTS:\r\n                element_outputs.push([item, index]);\r\n                break;\r\n            case Constants.ElementType.FRONTS:\r\n                element_fronts.push([item, index]);\r\n                break;\r\n            case Constants.ElementType.ADDONS:\r\n                element_addons.push([item, index]);\r\n                break;\r\n            case Constants.ElementType.INPUTS:\r\n                element_inputs.push([item, index]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n\r\n    return (<div className=\"AppInnerContainer\">\r\n    <div style={{ overflow: 'hidden', clear: 'both' }} key=\"0000\">\r\n        <div style={style} className=\"templated-distributions-container\" key=\"1\">\r\n            <em style={{fontSize: '48px', color: 'rgb(50, 55, 165)'}}>\r\n                24U\r\n            </em>\r\n            {distributions.map(({ accepts, lastDroppedItem, totalDroppedItems, e_name }, index) => (\r\n                <TableDist accept={accepts} \r\n                lastDroppedItem={lastDroppedItem} \r\n                totalDroppedItems={totalDroppedItems} \r\n                e_name={e_name}\r\n                onDrop={(item) => handleDrop(index, item)} key={index}></TableDist>\r\n            ))}\r\n        </div>\r\n    </div>\r\n\r\n    <div className=\"boxes-container-draggable\" key=\"1111\">\r\n\r\n        <div className=\"boxes-container-holder-left\" key=\"1\">\r\n            <div style={{ overflow: 'hidden', clear: 'both', marginTop: \"15px\", width: \"90%\",\r\n            position: 'relative' }} className=\"boxes-container\">\r\n                <em key=\"0\">{element_fronts[0][0].element_type}</em>\r\n                <div key=\"1\" className=\"draggable-box-inputs\">\r\n                {\r\n                    element_fronts.map((element, index) => (\r\n                        renderBox(element[0], element[1])\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"boxes-container-holder-right\" key=\"2\">\r\n            <div style={{ overflow: 'hidden', clear: 'both', marginTop: \"15px\", width: \"90%\",\r\n            position: 'relative' }} className=\"boxes-container\" key=\"1\">\r\n                <em key=\"0\">{element_outputs[0][0].element_type}</em>\r\n                <div key=\"1\" className=\"draggable-box-inputs\">\r\n                {\r\n                    element_outputs.map((element, index) => (\r\n                        renderBox(element[0], element[1])\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ overflow: 'hidden', clear: 'both', marginTop: \"15px\", width: \"90%\",\r\n            position: 'relative' }} className=\"boxes-container\" key=\"2\">\r\n                <em key=\"0\">{element_addons[0][0].element_type}</em>\r\n                <div key=\"1\" className=\"draggable-box-inputs\">\r\n                {\r\n                    element_addons.map((element, index) => (\r\n                        renderBox(element[0], element[1])\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ overflow: 'hidden', clear: 'both', marginTop: \"15px\", width: \"90%\",\r\n            position: 'relative' }} className=\"boxes-container\" key=\"3\">\r\n                <em key=\"0\">{element_inputs[0][0].element_type}</em>\r\n                <div key=\"1\" className=\"draggable-box-inputs\">\r\n                {\r\n                    element_inputs.map((element, index) => (\r\n                        renderBox(element[0], element[1])\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    {dustbins.map(({accepts}, num) => (\r\n        <DustBin key={num} accept={accepts} onDrop={(item) => handleDustBinDrop(num, item)}></DustBin>\r\n    ))}\r\n        \r\n    </div>);\r\n};\r\n","import MD5 from \"crypto-js/md5\";\r\n\r\nexport default function Uniqid(name) {\r\n    const now = new Date();\r\n    return MD5(name + \"/\" + now.getTime().toString()).toString();\r\n}","import React, { useState, useCallback } from 'react';\r\nimport { useDragLayer } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport { BoxDragPreview } from './BoxDragPreview';\r\nimport { snapToGrid } from './snapToGrid';\r\nimport { useDrag } from 'react-dnd';\r\nimport update from 'immutability-helper';\r\nimport { useEffect } from 'react'\r\nimport { fromEvent } from 'rxjs'\r\nimport { map, throttleTime } from 'rxjs/operators'\r\nimport Constants from './Constants';\r\nconst layerStyles = {\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    zIndex: 100,\r\n    marginLeft: \"-45%\",\r\n    width: '100%',\r\n    height: '100%',\r\n};\r\nfunction getItemStyles(initialOffset, currentOffset, clientOffset, isSnapToGrid) {\r\n    if (!initialOffset || !currentOffset) {\r\n        return {\r\n            display: 'none',\r\n        };\r\n    }\r\n    let { x, y } = clientOffset;\r\n    if (isSnapToGrid) {\r\n        x -= initialOffset.x + Constants.gridSize;\r\n        y -= initialOffset.y + Constants.gridSize;\r\n        [x, y] = snapToGrid(x, y);\r\n        x += initialOffset.x;\r\n        y += initialOffset.y;\r\n    }\r\n    const transform = `translate(${x}px, ${y}px)`;\r\n    return {\r\n        transform: transform,\r\n        WebkitTransform: transform,\r\n    };\r\n}\r\nexport const CustomDragLayer = (props) => {\r\n    const { itemType, isDragging, item, initialOffset, currentOffset, clientOffset } = useDragLayer((monitor) => ({\r\n        item: monitor.getItem(),\r\n        itemType: monitor.getItemType(),\r\n        initialOffset: monitor.getInitialClientOffset(),\r\n        currentOffset: monitor.getSourceClientOffset(),\r\n        clientOffset: monitor.getClientOffset(),\r\n        isDragging: monitor.isDragging(),\r\n        collect: (monitor) => {\r\n            return {\r\n                isOver: monitor.isOver(),\r\n                canDrop: monitor.canDrop(),\r\n                initialOffset: monitor.getInitialClientOffset(),\r\n                currentOffset: monitor.getSourceClientOffset(),\r\n                clientOffset: monitor.getClientOffset()\r\n            }\r\n        }\r\n    }));\r\n    let position = useMousePosition();\r\n\r\n    // mouse tracking\r\n    function useMousePosition() {\r\n        const [x, setX] = useState(null)\r\n        const [y, setY] = useState(null)\r\n        \r\n        useEffect(() => {\r\n            // Subscribe to the mousemove event\r\n            const sub = fromEvent(document, 'mousemove')\r\n            // Extract out current mouse position from the event\r\n            .pipe(map(event => [event.clientX, event.clientY]))\r\n            // We have closure over the updater functions for our two state variables\r\n            // Use these updaters to bridge the gap between RxJS and React\r\n            .subscribe(([newX, newY]) => {\r\n                setX(newX)\r\n                setY(newY)\r\n            })\r\n        \r\n            // When the component unmounts, remove the event listener\r\n            return () => {\r\n                sub.unsubscribe()\r\n            }\r\n            // We use [] here so that this effect fires exactly once.\r\n            // (After the first render)\r\n        }, [])\r\n\r\n        return { mouseX: x, mouseY: y }\r\n    }\r\n    function renderItem() {\r\n        switch (itemType) {\r\n            case ItemTypes.PLUGS_1:\r\n            case ItemTypes.PLUGS_2:\r\n            case ItemTypes.PLUGS_3: \r\n            case ItemTypes.PLUGS_4:\r\n            case ItemTypes.PLUGS_5:\r\n            case ItemTypes.SOCKETS_1:\r\n            case ItemTypes.SOCKETS_2: \r\n            case ItemTypes.SOCKETS_3:\r\n            case ItemTypes.PILOT_LIGHTS:\r\n            case ItemTypes.MULTIMETER:\r\n            case ItemTypes.LIVE_PINS_INPUT:\r\n            case ItemTypes.LIVE_PINS_OUTPUT:\r\n            case ItemTypes.PINS_INPUT_1: \r\n            case ItemTypes.PINS_INPUT_2:\r\n                // return <BoxDragPreview type={item.type} name={item.name} image={item.image} width={item.width} />;\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    if (!isDragging) {\r\n        return null;\r\n    }\r\n    let shortClassName = \"custom-drag-layer-item-\" + itemType;\r\n    // specify an id for styling purposes\r\n    let id = shortClassName + \"-\" + item.name;\r\n    return (<div style={layerStyles} className=\"custom-drag-layer\" id={id}>\r\n\t\t\t<div style={getItemStyles(initialOffset, currentOffset, clientOffset, props.snapToGrid)} className=\"custom-drag-layer-inner\">\r\n\t\t\t\t{renderItem()}\r\n\t\t\t</div>\r\n\t\t</div>);\r\n};\r\n","import React from 'react'\r\nimport Controller from './Controller'\r\nimport { ItemTypes } from './ItemTypes'\r\nimport $ from 'jquery'\r\nimport Constants from './Constants';\r\n\r\nclass FrontSide extends React.Component {\r\n\r\n    id = 'distribution_front_side'\r\n    viewBox = \"\"\r\n\r\n    state = {\r\n        change: false\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.viewBox = this.props.viewBox;\r\n        this.paper = window.Snap('#'+this.id)\r\n        this.g = this.paper.g();\r\n        this.image = this.image.bind(this);\r\n        this.objects = this.objects.bind(this);\r\n        this.type_mapping = this.type_mapping.bind(this);\r\n        this.importAllObjects = this.importAllObjects.bind(this);\r\n        this.importCartesianObjectsByCache = this.importCartesianObjectsByCache.bind(this);\r\n        this.importCartesianObjectsByCache = this.importCartesianObjectsByCache.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n        this.changeSlider = this.changeSlider.bind(this);\r\n        this.obtainViewBox = this.obtainViewBox.bind(this);\r\n\r\n        this.object_types = Object.fromEntries(this.type_mapping());\r\n        // import function is a Promise\r\n        this.importAllObjects(\"local_storage\").then((objects) => this.draw(objects)).catch(err => console.error(err))\r\n\r\n        let mousePosition = 0, instance = this;\r\n        $('#'+this.id).mousedown(function(event1) {\r\n            $(this).css('cursor', 'grab');\r\n            if(mousePosition == 0) {\r\n                mousePosition = {'x': event1.clientX, 'y': event1.clientY}\r\n            }\r\n            $(this).mousemove(function (event2) {\r\n                $(this).css('cursor', 'grab');\r\n                const difference = {'x': event2.clientX - mousePosition.x, 'y': event2.clientY - mousePosition.y};\r\n                let viewBox = instance.obtainViewBox();\r\n                viewBox[0] -= (difference.x);\r\n                viewBox[1] -= (difference.y);\r\n                viewBox = viewBox.map(v => v.toString())\r\n                instance.viewBox = viewBox.join(\" \");\r\n                instance.setState({change: !instance.state['change']})\r\n            });\r\n        }).mouseup(function () {\r\n            $(this).css('cursor', 'default');\r\n            $(this).unbind('mousemove');\r\n            mousePosition = 0\r\n        }).mouseout(function () {\r\n            $(this).css('cursor', 'default');\r\n            $(this).unbind('mousemove');\r\n        });\r\n    }\r\n\r\n    type_mapping() {\r\n        return new Map([\r\n            [ItemTypes.PILOT_LIGHTS, 'image'], \r\n            [ItemTypes.MULTIMETER, 'image']\r\n        ])\r\n    }\r\n\r\n    objects() {\r\n        return null;\r\n    }\r\n    \r\n    image(objects) {\r\n        for(var i = 0; i < objects.length; i++) {\r\n            let image = objects[i].image;\r\n            let width = parseInt(objects[i].width.replace('px', ''));\r\n            let height = parseInt(objects[i].height.replace('px', ''));\r\n            let element = this.paper.image(image, objects[i].left, objects[i].top, (width / Constants.SCALE.FRONT_SIDE).toString() + 'px', \r\n            (height / Constants.SCALE.FRONT_SIDE).toString() + 'px');\r\n            this.g.add(element);\r\n        }\r\n    }\r\n\r\n    importAllObjects(cache) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                if(cache == \"local_storage\") {\r\n                    this.objects = this.importCartesianObjectsByCache()\r\n                } else if(cache == \"database\") {\r\n                    this.objects = this.importCartesianObjectsFromDatabase()\r\n                }\r\n            } catch(err) {\r\n                reject(err)\r\n            }\r\n            resolve(this.objects)\r\n        })\r\n    }\r\n\r\n    importCartesianObjectsByCache() {\r\n        let objects = window.localStorage.getItem(\"cartesian: items\");\r\n        return JSON.parse(objects);\r\n    }\r\n\r\n    importCartesianObjectsFromDatabase() {\r\n        return null;\r\n    }\r\n\r\n    draw(objects) {\r\n        var function_to_execute = null;\r\n        for(var i in objects) {\r\n            if(objects[i].type in this.object_types) {\r\n                function_to_execute = this.object_types[objects[i].type];\r\n            }\r\n        }\r\n        if(function_to_execute != null) {\r\n            this[function_to_execute](objects) // call this.image function\r\n        }\r\n    }\r\n\r\n    obtainViewBox() {\r\n        let viewBox = this.viewBox.split(\" \").map(v => parseInt(v)); // viewBox array\r\n        return viewBox;\r\n    }\r\n\r\n    changeSlider(event) {\r\n        let viewBox = this.obtainViewBox();\r\n        let value = event.target.value;\r\n        viewBox[0] += ((50-value) * 5);\r\n        viewBox[1] += ((50-value) * 5);\r\n        viewBox[2] -= ((50-value) * 5);\r\n        viewBox[3] -= ((50-value) * 5);\r\n        viewBox = viewBox.map(v => v.toString())\r\n        this.viewBox = viewBox.join(\" \");\r\n        // console.log(this.viewBox);\r\n        this.setState({change: !this.state['change']})\r\n    }\r\n\r\n    render() {\r\n        $(document.getElementById(this.id)).attr('viewBox', this.viewBox);\r\n        return <input type=\"range\" name=\"zoom\" id=\"zoom\" min=\"0\" max=\"50\" step=\"1\" onChange={this.changeSlider} />;\r\n    }\r\n\r\n}\r\n\r\nexport default FrontSide;","import React from 'react'\r\nimport Controller from './Controller'\r\nimport { ItemTypes } from './ItemTypes'\r\nimport $ from 'jquery'\r\nimport Constants from './Constants';\r\n\r\nclass RearSide extends React.Component {\r\n\r\n    id = 'distribution_rear_side'\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.paper = window.Snap('#'+this.id)\r\n        this.image = this.image.bind(this);\r\n        this.objects = this.objects.bind(this);\r\n        this.type_mapping = this.type_mapping.bind(this);\r\n        this.importAllObjects = this.importAllObjects.bind(this);\r\n        this.importCartesianObjectsByCache = this.importCartesianObjectsByCache.bind(this);\r\n        this.importCartesianObjectsByCache = this.importCartesianObjectsByCache.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n\r\n        this.object_types = Object.fromEntries(this.type_mapping());\r\n        // import function is a Promise\r\n        this.importAllObjects(\"local_storage\").then((objects) => this.draw(objects)).catch(err => console.error(err))\r\n\r\n        let mousePosition = 0, instance = this;\r\n        $('#'+this.id).mousedown(function(event1) {\r\n            $(this).css('cursor', 'grab');\r\n            if(mousePosition == 0) {\r\n                mousePosition = {'x': event1.clientX, 'y': event1.clientY}\r\n            }\r\n            $(this).mousemove(function (event2) {\r\n                $(this).css('cursor', 'grab');\r\n                const difference = {'x': event2.clientX - mousePosition.x, 'y': event2.clientY - mousePosition.y};\r\n                let viewBox = instance.obtainViewBox();\r\n                viewBox[0] -= (difference.x);\r\n                viewBox[1] -= (difference.y);\r\n                viewBox = viewBox.map(v => v.toString())\r\n                instance.viewBox = viewBox.join(\" \");\r\n                instance.setState({change: !instance.state['change']})\r\n            });\r\n        }).mouseup(function () {\r\n            $(this).css('cursor', 'default');\r\n            $(this).unbind('mousemove');\r\n            mousePosition = 0\r\n        }).mouseout(function () {\r\n            $(this).css('cursor', 'default');\r\n            $(this).unbind('mousemove');\r\n        });\r\n    }\r\n\r\n    type_mapping() {\r\n        return new Map([\r\n            [ItemTypes.LIVE_PINS_INPUT, this.image],\r\n            [ItemTypes.LIVE_PINS_OUTPUT, this.image],\r\n            [ItemTypes.PINS_INPUT_1, this.image],\r\n            [ItemTypes.PINS_INPUT_2, this.image],\r\n            [ItemTypes.PLUGS_1, this.image],\r\n            [ItemTypes.PLUGS_2, this.image],\r\n            [ItemTypes.PLUGS_3, this.image],\r\n            [ItemTypes.PLUGS_4, this.image],\r\n            [ItemTypes.PLUGS_5, this.image]\r\n        ]);\r\n    }\r\n\r\n    objects() {\r\n        return null;\r\n    }\r\n    \r\n    image(objects) {\r\n        for(var i = 0; i < objects.length; i++) {\r\n            let image = objects[i].image;\r\n            let width = parseInt(objects[i].width.replace('px', ''));\r\n            let height = parseInt(objects[i].height.replace('px', ''));\r\n            this.paper.image(image, objects[i].left, objects[i].top, (width / Constants.SCALE.FRONT_SIDE).toString() + 'px', \r\n            (height / Constants.SCALE.FRONT_SIDE).toString() + 'px')\r\n        }\r\n    }\r\n\r\n    importAllObjects(cache) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                if(cache == \"local_storage\") {\r\n                    this.objects = this.importCartesianObjectsByCache()\r\n                } else if(cache == \"database\") {\r\n                    this.objects = this.importCartesianObjectsFromDatabase()\r\n                }\r\n            } catch(err) {\r\n                reject(err)\r\n            }\r\n            resolve(this.objects)\r\n        })\r\n    }\r\n\r\n    importCartesianObjectsByCache() {\r\n        let objects = window.localStorage.getItem(\"cartesian: items\");\r\n        return JSON.parse(objects);\r\n    }\r\n\r\n    importCartesianObjectsFromDatabase() {\r\n        return null;\r\n    }\r\n\r\n    draw(objects) {\r\n        var function_to_execute = null;\r\n        for(var i in objects) {\r\n            if(objects[i].type in this.object_types) {\r\n                function_to_execute = this.object_types[objects[i].type];\r\n            }\r\n        }\r\n        if(function_to_execute != null) {\r\n            this[function_to_execute](objects) // call this.image function\r\n        }\r\n    }\r\n\r\n    obtainViewBox() {\r\n        let viewBox = this.viewBox.split(\" \").map(v => parseInt(v)); // viewBox array\r\n        return viewBox;\r\n    }\r\n\r\n    render() {\r\n        // alert(this.props.viewBox)\r\n        $(document.getElementById(this.id)).attr('viewBox', this.props.viewBox);\r\n        return <input type=\"range\" name=\"zoom\" id=\"zoom\" min=\"0\" max=\"50\" step=\"1\" onChange={this.changeSlider} />;\r\n    }\r\n\r\n}\r\n\r\nexport default RearSide;","class Singleton {\r\n\r\n    static controller = null\r\n\r\n}\r\n\r\nexport default Singleton;","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Container } from './Container';\r\nimport { CustomDragLayer } from './CustomDragLayer';\r\nimport FrontSide from './FrontSide';\r\nimport RearSide from './RearSide';\r\nimport Singleton from './Singleton';\r\nimport $ from 'jquery';\r\nimport Constants from './Constants';\r\n\r\nexport default class Controller extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        Singleton.__singletonRef = new Singleton();\r\n        Singleton.__singletonRef.controller = this;\r\n        this.state = {\r\n            svg_monitoring: false,\r\n            svg_power: false,\r\n            snapToGridAfterDrop: true,\r\n            snapToGridWhileDragging: true,\r\n            viewBox: ''\r\n        };\r\n        this.changeToMonitoring = this.changeToMonitoring.bind(this);\r\n        this.changeToPower = this.changeToPower.bind(this);\r\n        this.changeToDefault = this.changeToDefault.bind(this);\r\n        this.cartesianWidth = null; this.cartesianHeight = null; this.templateWidth = null; this.templateHeight = null;\r\n    }\r\n\r\n    changeToMonitoring() {\r\n        this.setState({svg_monitoring: true, svg_power: false, viewBox: '0 0 ' + (this.cartesianWidth * Constants.SCALE.FRONT_SIDE).toString() + \" \" + \r\n        (this.cartesianHeight * Constants.SCALE.FRONT_SIDE).toString()})\r\n        $(document.body).css('overflow', 'hidden');\r\n        $(document.documentElement).css('overflow', 'hidden');\r\n    }\r\n\r\n    changeToPower() {\r\n        this.setState({svg_monitoring: false, svg_power: true, viewBox: '0 0 ' + (this.templateWidth * Constants.SCALE.REAR_SIDE).toString() + \" \" + \r\n            (this.cartesianHeight * Constants.SCALE.REAR_SIDE).toString()})\r\n        $(document.body).css('overflow', 'hidden');\r\n        $(document.documentElement).css('overflow', 'hidden');\r\n    }\r\n\r\n    changeToDefault() {\r\n        this.setState({svg_monitoring: false, svg_power: false, viewBox: ''})\r\n        $(document.body).css('overflow', 'visible');\r\n        $(document.documentElement).css('overflow', 'visible');\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.cartesianWidth) {\r\n            this.cartesianWidth = $('.cartesian').width()\r\n        }\r\n        if(!this.cartesianHeight) {\r\n            this.cartesianHeight = $('.cartesian').height()\r\n        }\r\n        if(!this.templateWidth) {\r\n            this.templateWidth = $('.templated').width()\r\n        }\r\n        if(!this.templateHeight) {\r\n            this.templateHeight = $('.templated').height()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let elem = null;\r\n        let designer = null, \r\n        buttons = <div className=\"buttons\">\r\n            <button onClick={this.changeToMonitoring}>Monitoring</button>\r\n            <button onClick={this.changeToPower}>Power</button>\r\n        </div>;\r\n        if(this.state['svg_monitoring'] == true) {\r\n            elem = <FrontSide viewBox={this.state['viewBox']} />;\r\n        } else if(this.state['svg_power'] == true) {\r\n            elem = <RearSide viewBox={this.state['viewBox']} />;\r\n        } else {\r\n            designer = <div className=\"bodyContainer\">\r\n            <div className=\"AppInnerContainerHolder\">\r\n                <Container snapToGrid={this.state['snapToGridAfterDrop']}/>\r\n            </div></div>;\r\n        }\r\n        return (<div className=\"container\">\r\n\r\n            { buttons }\r\n            \r\n            { designer }\r\n\r\n            { elem }\r\n\r\n        </div>);\r\n    }\r\n}","import '../App.css';\r\nimport React from 'react'\r\nimport Controller from './Controller'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\n\r\nfunction DrawingApp() {\r\n    return (\r\n        <div className=\"App\">\r\n            <DndProvider backend={HTML5Backend}>\r\n                <Controller />\r\n            </DndProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawingApp;","import './App.css';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport DrawingApp from './components/DrawingApp'\n\nfunction App() {\n  return (\n    <DrawingApp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}